openapi: 3.0.1
info:
  title: IoT-Api
  description: This document is API specification of RMM Agent communication API.
  version: '1.0'
servers:
  - url: https://rmm-mfpdev-apim.azure-api.net/iot
paths:
  /login-iot:
    post:
      tags:
        - Agent common
      summary: Get authentication token.
      description: Get authentication token.
      operationId: post-login-iot
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/loginIotReq'
            example:
              globalDeviceId: string
              iotAccessSecret: string
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/loginIotRsp'
              example:
                status: string
                data:
                  clientId: string
                  signedToken: string
                  parsedToken: string
                  authorizerName: string
                  platform: string
                  topicPolicyPrefix: string
                  region: string
                  protocol: string
                  reservedTopic: string
                  globalDeviceId: string
        '401':
          description: failure.
  /agentMIB/initialData:
    get:
      tags:
        - AgentMIB
      summary: Fetch Initial data for AgentMIB.
      description: Fetch Initial data for AgentMIB.
      operationId: fetch-initial-data-for-agentmib
      parameters:
        - name: t
          in: query
          description: Json web token.(Include agentId and expiration date.)
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Initial data for AgentMIB.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/agentMIBInitialData'
              example:
                type: string
                scheduleList:
                  - { }
                discoveryConditionList:
                  - { }
                deviceInfoList:
                  - { }
                deviceTypeList:
                  - { }
        '400':
          description: Bad request<br> Invalid request parameter.(parameter error. etc)
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: http status code. set to "400"
                  message:
                    type: string
                    description: 'error message.<br> If the specified Agent or related group is not found, set to "Not found." If any other errors occur, set to "Invalid request."'
                example:
                  value:
                    statusCode: 400
                    message: Invalid request.
              example:
                value:
                  statusCode: 400
                  message: Invalid request.
        '401':
          description: Unauthorized<br> Error related to jwt.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: http status code. set to "401"
                  message:
                    type: string
                    description: error message. set to "JWT Error."
                example:
                  value:
                    statusCode: 401
                    message: JWT Error.
              example:
                value:
                  statusCode: 401
                  message: JWT Error.
        '500':
          description: Internal server error<br> When an exception occurs.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: http status code. set to "500"
                  message:
                    type: string
                    description: error message. set to "An exception occurs."
                example:
                  value:
                    statusCode: 500
                    message: An exception occurs.
              example:
                value:
                  statusCode: 500
                  message: An exception occurs.
  /agentTCO/initialData:
    get:
      tags:
        - AgentTCO
      summary: Fetch Initial data for AgentTCO.
      description: Fetch Initial data for AgentTCO.
      operationId: fetch-initial-data-for-agenttco
      parameters:
        - name: t
          in: query
          description: Json web token.(Include agentId and expiration date.)
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Initial data for AgentTCO.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/agentTCOInitialData'
              example:
                type: string
                scheduleList:
                  - { }
                deviceInfoList:
                  - { }
        '400':
          description: Bad request<br> Invalid request parameter.(parameter error. etc)
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: http status code. set to "400"
                  message:
                    type: string
                    description: 'error message.<br> If the specified Agent or related group is not found, set to "Not found." If any other errors occur, set to "Invalid request."'
                example:
                  value:
                    statusCode: 400
                    message: Invalid request.
              example:
                value:
                  statusCode: 400
                  message: Invalid request.
        '401':
          description: Unauthorized<br> Error related to jwt.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: http status code. set to "401"
                  message:
                    type: string
                    description: error message. set to "JWT Error."
                example:
                  value:
                    statusCode: 401
                    message: JWT Error.
              example:
                value:
                  statusCode: 401
                  message: JWT Error.
        '500':
          description: Internal server error<br> When an exception occurs.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: http status code. set to "500"
                  message:
                    type: string
                    description: error message. set to "An exception occurs."
                example:
                  value:
                    statusCode: 500
                    message: An exception occurs.
              example:
                value:
                  statusCode: 500
                  message: An exception occurs.
  /agentFSS/initialData:
    get:
      tags:
        - AgentFSS
      summary: Fetch Initial data for AgentFSS.
      description: Fetch Initial data for AgentFSS.
      operationId: fetch-initial-data-for-agentfss
      parameters:
        - name: t
          in: query
          description: Json web token.(Include agentId and expiration date.)
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Initial data for AgentFSS.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/agentFSSInitialData'
              example:
                type: string
                scheduleList:
                  - { }
                deviceInfoList:
                  - { }
        '400':
          description: Bad request<br> Invalid request parameter.(parameter error. etc)
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: http status code. set to "400"
                  message:
                    type: string
                    description: 'error message.<br> If the specified Agent or related group is not found, set to "Not found." If any other errors occur, set to "Invalid request."'
                example:
                  value:
                    statusCode: 400
                    message: Invalid request.
              example:
                value:
                  statusCode: 400
                  message: Invalid request.
        '401':
          description: Unauthorized<br> Error related to jwt.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: http status code. set to "401"
                  message:
                    type: string
                    description: error message. set to "JWT Error."
                example:
                  value:
                    statusCode: 401
                    message: JWT Error.
              example:
                value:
                  statusCode: 401
                  message: JWT Error.
        '500':
          description: Internal server error<br> When an exception occurs.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: http status code. set to "500"
                  message:
                    type: string
                    description: error message. set to "An exception occurs."
                example:
                  value:
                    statusCode: 500
                    message: An exception occurs.
              example:
                value:
                  statusCode: 500
                  message: An exception occurs.
  /agentIDP/initialData:
    get:
      tags:
        - AgentIDP
      summary: Fetch Initial data for AgentIDP.
      description: Fetch Initial data for AgentIDP.
      operationId: fetch-initial-data-for-agentidp
      parameters:
        - name: t
          in: query
          description: Json web token.(Include agentId and expiration date.)
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Initial data for AgentIDP.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/agentIDPInitialData'
              example:
                type: string
                scheduleList:
                  - { }
                deviceInfoList:
                  - { }
        '400':
          description: Bad request<br> Invalid request parameter.(parameter error. etc)
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: http status code. set to "400"
                  message:
                    type: string
                    description: 'error message.<br> If the specified Agent or related group is not found, set to "Not found." If any other errors occur, set to "Invalid request."'
                example:
                  value:
                    statusCode: 400
                    message: Invalid request.
              example:
                value:
                  statusCode: 400
                  message: Invalid request.
        '401':
          description: Unauthorized<br> Error related to jwt.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: http status code. set to "401"
                  message:
                    type: string
                    description: error message. set to "JWT Error."
                example:
                  value:
                    statusCode: 401
                    message: JWT Error.
              example:
                value:
                  statusCode: 401
                  message: JWT Error.
        '500':
          description: Internal server error<br> When an exception occurs.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: http status code. set to "500"
                  message:
                    type: string
                    description: error message. set to "An exception occurs."
                example:
                  value:
                    statusCode: 500
                    message: An exception occurs.
              example:
                value:
                  statusCode: 500
                  message: An exception occurs.
components:
  schemas:
    loginIotReq:
      type: object
      properties:
        globalDeviceId:
          type: string
          description: globalDeviceId for Agent
        iotAccessSecret:
          type: string
          description: iotAccessSecret for Agent
    loginIotRsp:
      type: object
      properties:
        status:
          type: string
          description: Get authenticate token result.
        data:
          type: object
          properties:
            clientId:
              type: string
            signedToken:
              type: string
            parsedToken:
              type: string
            authorizerName:
              type: string
            platform:
              type: string
            topicPolicyPrefix:
              type: string
            region:
              type: string
            protocol:
              type: string
            reservedTopic:
              type: string
            globalDeviceId:
              type: string
    agentMIBInitialData:
      type: object
      properties:
        type:
          type: string
          description: message type.<br> Always set "init".
        scheduleList:
          type: array
          items:
            type: object
            description: Details omitted.
          description: Schedule list to be registered with the agent.
        discoveryConditionList:
          type: array
          items:
            type: object
            description: Details omitted.
          description: Discovery condition list for MFPs to be registered with the agent.
        deviceInfoList:
          type: array
          items:
            type: object
            description: Details omitted.
          description: MFP device information list to be registered with the agent.
        deviceTypeList:
          type: array
          items:
            type: object
            description: Details omitted.
          description: Custom device type list to be registered with the agent.
      description: Initial data for AgentMIB.
    agentTCOInitialData:
      type: object
      properties:
        type:
          type: string
          description: message type.<br> Always set "init".
        scheduleList:
          type: array
          items:
            type: object
            description: Details omitted.
          description: Schedule list to be registered with the agent.
        deviceInfoList:
          type: array
          items:
            type: object
            description: Details omitted.
          description: MFP device information list to be registered with the agent.
      description: Initial data for AgentTCO.
    agentFSSInitialData:
      type: object
      properties:
        type:
          type: string
          description: message type.<br> Always set "init".
        scheduleList:
          type: array
          items:
            type: object
          description: 'Schedule list to be registered with the agent.<br> Currently, the list is empty.'
        deviceInfoList:
          type: array
          items:
            type: object
            description: Details omitted.
          description: MFP device information list to be registered with the agent.
      description: Initial data for AgentFSS.
    agentIDPInitialData:
      type: object
      properties:
        type:
          type: string
          description: message type.<br> Always set "init".
        scheduleList:
          type: array
          items:
            type: object
            description: Details omitted.
          description: Schedule list to be registered with the agent.
        deviceInfoList:
          type: array
          items:
            type: object
            description: Details omitted.
          description: MFP device information list to be registered with the agent.
      description: Initial data for AgentIDP.
  securitySchemes:
    apiKeyHeader:
      type: apiKey
      name: Ocp-Apim-Subscription-Key
      in: header
    authorization:
      type: apiKey
      name: Authorization
      in: header
security:
  - apiKeyHeader: [ ]
  - authorization: [ ]
tags:
  - name: Agent common
    description: Common API for Agent.
  - name: AgentMIB
    description: API for AgentMIB.
  - name: AgentTCO
    description: API for AgentTCO.
  - name: AgentFSS
    description: API for AgentFSS.
  - name: AgentIDP
    description: API for AgentIDP.