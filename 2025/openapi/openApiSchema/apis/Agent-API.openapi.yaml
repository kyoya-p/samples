openapi: 3.0.1
info:
  title: Agent-API
  description: This document is API specification of RMM Agent Management API.
  version: '1.0'
servers:
  - url: https://rmm-mfpdev-apim.azure-api.net
paths:
  /agent/getAgentList:
    post:
      tags:
        - Agent Management
      summary: Get agent list.
      description: Returns a agent list whose deviceType is "launcher".<br> i.e. registered in specified group
      operationId: post-agent-getagentlist
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/getAgentListReq'
            example:
              startIndex: 0
              count: 10
              groupId: string
              simpleFilters:
                - key: string
                  value: string
              orderBy:
                - key: string
                  order: ascending
      responses:
        '200':
          description: Returns agent list of target group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAgentListRsp'
  /agent/createAgent:
    post:
      tags:
        - Agent Management
      summary: Create Agent.
      description: Create a new agent and register it in the DB.
      operationId: post-agent-createagent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createAgentReq'
            example:
              groupId: string
              agentName: string
      responses:
        '200':
          description: 'Returns the agentId of the created agent. <br> If the same agent name exists in the specified group, an E0048 error is returned.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAgentRsp'
              example:
                common:
                  errorList:
                    - errorCode: string
                      errorField: string
                      errorValue: string
                      errorMessage: string
                agentId: string
  /agent/updateAgentInfo:
    post:
      tags:
        - Agent Management
      summary: Update Agent infomation.
      description: Update agent information.
      operationId: post-agent-updateagentinfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateAgentInfoReq'
            example:
              groupId: string
              agentId: string
              agentName: string
      responses:
        '200':
          description: 'Update agent informantion result.<br> If the same agent name exists in the specified group, an E0048 error is returned.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/updateAgentInfoRsp'
              example:
                common:
                  errorList:
                    - errorCode: string
                      errorField: string
                      errorValue: string
                      errorMessage: string
  /agent/deleteAgent:
    post:
      tags:
        - Agent Management
      summary: Delete agents.
      description: Delete the agents Also delete the related agent.
      operationId: post-agent-deleteagent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deleteAgentReq'
            example:
              groupId: string
              agentIds:
                - string
              isExclude: true
      responses:
        '200':
          description: Agent deletion results.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deleteAgentRsp'
              example:
                common:
                  errorList:
                    - errorCode: string
                      errorField: string
                      errorValue: string
                      errorMessage: string
  /agent/downloadInstaller:
    post:
      tags:
        - Agent Management
      summary: Download Agent Installer.
      description: Download Agent Installer.
      operationId: post-agent-downloadinstaller
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/downloadInstallerReq'
            example:
              groupId: string
              agentId: string
      responses:
        '200':
          description: Agent installer download request response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/downloadInstallRsp'
              example:
                common:
                  errorList:
                    - errorCode: string
                      errorField: string
                      errorValue: string
                      errorMessage: string
                url: string
  /agent/confirmAgentInstall:
    post:
      tags:
        - Agent Management
      summary: Confirm new installation of Agent.
      description: Confirm new installation of Agent.
      operationId: post-agent-confirmagentinstall
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/confirmAgentInstallReq'
            example:
              agentId: string
      responses:
        '200':
          description: 'Confirm new installation of agent resuponse.<br> If the specified Agent has never connected, an E0018 error is returned.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/confirmAgentInstallRsp'
              example:
                common:
                  errorList:
                    - errorCode: string
                      errorField: string
                      errorValue: string
                      errorMessage: string
  /agent/getActivationStatus:
    post:
      tags:
        - Agent Management
      summary: Get activation status.
      description: Get the activation status of the specified agent.
      operationId: post-agent-getactivationstatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/getActivationStatusReq'
            example:
              agentId: string
      responses:
        '200':
          description: Result of getting activation status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getActivationStatusRsp'
              example:
                common:
                  errorList:
                    - errorCode: string
                      errorField: string
                      errorValue: string
                      errorMessage: string
                status: string
                code: string
                activationTimestamp: 0
                validPeriod: 0
  /agent/requestActivationCode:
    post:
      tags:
        - Agent Management
      summary: Request an activation code.
      description: Request an activation code for activation of the specified agent.
      operationId: post-agent-requestactivationcode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requestActivationCodeReq'
            example:
              agentId: string
      responses:
        '200':
          description: 'Activation code request results.<br> If the activation code cannot be generated, an E0023 error is returned.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/requestActivationCodeRsp'
              example:
                common:
                  errorList:
                    - errorCode: string
                      errorField: string
                      errorValue: string
                      errorMessage: string
                code: string
                validPeriod: 0
  /agent/inactivation:
    post:
      tags:
        - Agent Management
      summary: 'Inactivate the agent. [TBD]'
      description: Inactivate the specified agent.
      operationId: post-agent-inactivation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/inactivationReq'
            example:
              agentId: string
      responses:
        '200':
          description: Agent inactivation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inactivationRsp'
              example:
                common:
                  errorList:
                    - errorCode: string
                      errorField: string
                      errorValue: string
                      errorMessage: string
  /agent/setUpdateMode:
    post:
      tags:
        - Agent Management
      summary: Sets the agent update mode.
      description: Sets the update mode for the specified agent.
      operationId: post-agent-setupdatemode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/setUpdateModeReq'
            example:
              groupId: string
              agentIds:
                - string
              isExclude: true
              mode: auto
              retryMax: 0
      responses:
        '200':
          description: Update mode setting result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/setUpdateModeRsp'
              example:
                common:
                  errorList:
                    - errorCode: string
                      errorField: string
                      errorValue: string
                      errorMessage: string
  /agent/requestAgentUpdate:
    post:
      tags:
        - Agent Management
      summary: Request agent update.
      description: 'Request update for the specified agent.<br> An error is returned if the specified agent includes agents in the following states.<br> 1) Agent in automatic update mode(However, agents whose "updateStatus" is "updateSuspended" are excluded.)<br> 2) Agents that do not require updating<br>'
      operationId: post-agent-requestagentupdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requestAgentUpdateReq'
            example:
              groupId: string
              agentIds:
                - string
              isExclude: true
      responses:
        '200':
          description: Update mode setting result.<br> An E0044 error is returned if an agent that cannot be updated is included.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/requestAgentUpdateRsp'
              example:
                common:
                  errorList:
                    - errorCode: string
                      errorField: string
                      errorValue: string
                      errorMessage: string
  /agent/getUpdateSuspendedList:
    post:
      tags:
        - Agent Management
      summary: Get Update suspended agent list.
      description: Returns a list of agents in an update suspended state.
      operationId: post-agent-getupdatesuspendedlist
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/getUpdateSuspendedListReq'
            example:
              groupId: string
      responses:
        '200':
          description: Returns agent list of Update suspended status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getUpdateSuspendedListRsp'
              example:
                common:
                  errorList:
                    - errorCode: string
                      errorField: string
                      errorValue: string
                      errorMessage: string
                agentNames:
                  - string
  /agent/getAgentLogList:
    post:
      tags:
        - Agent Management
      summary: Get agent log list.
      description: Returns a list of agent logging status
      operationId: post-agent-getagentloglist
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/getAgentLogListReq'
            example:
              startIndex: 0
              count: 10
              groupId: string
              simpleFilters:
                - key: string
                  value: string
              orderBy:
                - key: string
                  order: ascending
      responses:
        '200':
          description: Returns agent log list of target group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAgentLogListRsp'
              example:
                common:
                  errorList:
                    - errorCode: string
                      errorField: string
                      errorValue: string
                      errorMessage: string
                startIndex: 0
                count: 0
                resultCount: 0
                totalCount: 0
                agentLogList:
                  - agentId: string
                    agentName: string
                    hostName: string
                    ipAddress: string
                    agentVersion: string
                    connectionStatus: string
                    activateStatus: string
                    logStatus: string
                    logStatusTimestamp: 0
                    uploadLog: string
  /agent/downloadAgentLog:
    post:
      tags:
        - Agent Management
      summary: Agent log download request
      description: Requests to download the uploaded logs of the specified Agent.
      operationId: post-agent-downloadagentlog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/downloadAgentLogReq'
            example:
              agentId: string
      responses:
        '200':
          description: Returns the URL to download the agent log.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/downloadAgentLogRsp'
              example:
                common:
                  errorList:
                    - errorCode: string
                      errorField: string
                      errorValue: string
                      errorMessage: string
                url: string
  /agent/globalRemoteOperationUrl:
    post:
      tags:
        - Agent Function
      summary: Obtain Global Remote Operation Panel Url.
      description: Obtain the URL to connect to the Global Remote Operation Panel.
      operationId: post-agent-globalremoteoperationurl
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/globalRemoteOperationUrlReq'
            example:
              deviceId: string
      responses:
        '200':
          description: Returns the Global Remote Operation Panel Url.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/globalRemoteOperationUrlRsp'
              example:
                common:
                  errorList:
                    - errorCode: string
                      errorField: string
                      errorValue: string
                      errorMessage: string
                connectGroup: string
                connectionUrl: string
  /agent/connectGlobalRemoteOperation:
    post:
      tags:
        - Agent Function
      summary: Request the agent to connect to Global Remote Operation.
      description: Request the agent to connect to Global Remote Operation Panel.
      operationId: post-agent-connectglobalremoteoperation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/connectGlobalRemoteOperationReq'
            example:
              deviceId: string
              connectGroup: string
              connectionId: string
      responses:
        '200':
          description: Returns the Global Remote Operation Panel Url.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connectGlobalRemoteOperationRsp'
              example:
                common:
                  errorList:
                    - errorCode: string
                      errorField: string
                      errorValue: string
                      errorMessage: string
  /agent/changeEmbeddedAgentConfig:
    post:
      tags:
        - Agent Management
      summary: Configuration change request for Embedded Agent.
      description: Requests a configuration change to the embedded agent installed on the MFP.
      operationId: post-agent-changeembeddedagentconfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/changeEmbeddedAgentConfigReq'
            example:
              deviceId: string
              command: string
      responses:
        '200':
          description: '''Configuration change request result for Embedded Agent'''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/changeEmbeddedAgentConfigRsp'
              example:
                common:
                  errorList:
                    - errorCode: string
                      errorField: string
                      errorValue: string
                      errorMessage: string
  /agent/getFoundDeviceList:
    post:
      tags:
        - Agent Function
      summary: Get Found device list.
      description: Returns the list of found devices in the specified agent.
      operationId: post-agent-getfounddevicelist
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/getFoundDeviceListReq'
            example:
              agentId: string
              discoveryMethod: string
      responses:
        '200':
          description: List of found devices.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getFoundDeviceListRsp'
              example:
                common:
                  errorList:
                    - errorCode: string
                      errorField: string
                      errorValue: string
                      errorMessage: string
                deviceList:
                  - modelName: string
                    serialNumber: string
                    ipAddress: string
                    macAddress: string
                    friendlyName: string
                    familyName: string
                    snmpSetting:
                      snmpVersion: string
                      getCommunityString: string
                      contextName: string
                      userName: string
                      securityAuthType: string
                      securityAuthKey: string
                      securityPrivType: string
                      securityPrivKey: string
                    retry: 0
                    timeout: 0
                    fileFilter: string
components:
  schemas:
    getAgentListReq:
      required:
        - groupId
      type: object
      properties:
        startIndex:
          type: integer
          description: "Start Index <br> ●Check content\n  - Error for other than numeric value"
          default: 0
        count:
          type: integer
          description: "Number of records <br> ●Check content\n  - Error for other than numeric value"
          default: 10
        groupId:
          type: string
          description: "groupId of target group <br> ●Check content\n  - Error for null, null character (i.e. empty string)"
        simpleFilters:
          type: array
          items:
            required:
              - key
              - value
            type: object
            properties:
              key:
                type: string
                description: "Filter key<br> Specifiable items are as below. - Filter key list\n  <table border=\"1\">\n    <tr><th>Key</th><th>Description</th></tr>\n    <tr><td>agentName</td><td>Agent name</td></tr>\n    <tr><td>hostName</td><td>Host name</td></tr>\n    <tr><td>ipAddress</td><td>IP Address</td></tr>\n    <tr><td>agentVersion</td><td>Agent Version</td></tr>\n    <tr><td>connectionStatusSignal</td><td>Agent Status</td></tr>\n    <tr><td>connectionStatus</td><td>Agent Status</td></tr>\n    <tr><td>updateMode</td><td>Agent Update Mode</td></tr>\n    <tr><td>updateStatus</td><td>Agent Update Status</td></tr>\n    <tr><td>updateRetryCount</td><td>Agent Update retry count</td></tr>\n  </table>\n\n●Check content\n  - Error for other than specified value"
              value:
                type: string
                description: "Filtering target strings <br> Strings that are Specifiable in filter key are as below.\n- Filtering target strings\n  <table border=\"1\">\n    <tr><th>Key</th><th>Description</th></tr>\n    <tr><td>agentName</td><td>Specify input value</td></tr>\n    <tr><td>hostName</td><td>Specify input value</td></tr>\n    <tr><td>ipAddress</td><td>Specify input value</td></tr>\n    <tr><td>agentVersion</td><td>Specify input value</td></tr>\n    <tr><td>connectionStatusSignal</td><td>\n      <table border=\"1\">\n        <tr><td>unknown</td></tr>\n        <tr><td>normal</td></tr>\n        <tr><td>warning</td></tr>\n        <tr><td>error</td></tr>\n      </table>\n    </td></tr>\n    <tr><td>connectionStatus</td><td>\n      <table border=\"1\">\n        <tr><td>notInstalled</td></tr>\n        <tr><td>newlyInstalled</td></tr>\n        <tr><td>updating</td></tr>\n        <tr><td>connected</td></tr>\n        <tr><td>disconnected</td></tr>\n        <tr><td>inactivated</td></tr>\n      </table>\n    </td></tr>\n    <tr><td>updateMode</td><td>\n      <table border=\"1\">\n        <tr><td>auto</td></tr>\n        <tr><td>manual</td></tr>\n        <tr><td>notSupported</td></tr>\n      </table>\n    </td></tr>\n    <tr><td>updateStatus</td><td>\n      <table border=\"1\">\n        <tr><td>unknown</td></tr>\n        <tr><td>upToDate</td></tr>\n        <tr><td>updateRequired</td></tr>\n        <tr><td>updateProcessing</td></tr>\n        <tr><td>updateSuspended</td></tr>\n      </table>\n    </td></tr>\n    <tr><td>updateRetryCount</td><td>Specify input value</td></tr>\n  </table>"
          description: Simple Filter
        orderBy:
          type: array
          items:
            required:
              - key
              - order
            type: object
            properties:
              key:
                type: string
                description: "Sort Key <br> Specifiable items are as below.\n- Sort Key list\n  <table border=\"1\">\n    <tr><th>Key</th><th>Description</th></tr>\n    <tr><td>agentName</td><td>Agent name</td></tr>\n    <tr><td>hostName</td><td>Host name</td></tr>\n    <tr><td>ipAddress</td><td>IP Address</td></tr>\n    <tr><td>agentVersion</td><td>Agent Version(*1)</td></tr>\n    <tr><td>connectionStatusSignal</td><td>Agent Status Signal(*2)</td></tr>\n    <tr><td>connectionStatus</td><td>Agent Status(*3)</td></tr>\n    <tr><td>updateMode</td><td>Agent Update Mode(*5)</td></tr>\n    <tr><td>updateStatus</td><td>Agent Update Status(*4)</td></tr>\n    <tr><td>latestUpdateTimestamp</td><td>Latest Update Timestamp</td></tr>\n    <tr><td>updateRetryCount</td><td>Agent Update retry count</td></tr>\n  </table>\n\n  *1) Sort by character code.\n\n  *2) Priority of the Agent Status Signal is as below.\n      <table border=\"1\">\n        <tr><th>Priority Order</th><th>Value</th></tr>\n        <tr><td>1</td><td>unknown</td></tr>\n        <tr><td>2</td><td>error</td></tr>\n        <tr><td>3</td><td>warning</td></tr>\n        <tr><td>4</td><td>normal</td></tr>\n      </table>\n      When \"ascending\" is specified in \"Sort order”, display the items in order from smallest priority value. <br>\n\n  *3) Priority of the Agent Status is as below.\n      <table border=\"1\">\n        <tr><th>Priority Order</th><th>Value</th></tr>\n        <tr><td>1</td><td>notInstalled</td></tr>\n        <tr><td>2</td><td>inactivated</td></tr>\n        <tr><td>3</td><td>disconnected</td></tr>\n        <tr><td>4</td><td>newlyInstalled</td></tr>\n        <tr><td>5</td><td>updating</td></tr>\n        <tr><td>6</td><td>connected</td></tr>\n      </table>\n      When \"ascending\" is specified in \"Sort order”, display the items in order from smallest priority value. <br>\n\n  *4) Priority of the Agent Update Status is as below.\n      <table border=\"1\">\n        <tr><th>Priority Order</th><th>Value</th></tr>\n        <tr><td>1</td><td>updateSuspended</td></tr>\n        <tr><td>2</td><td>updateRequired</td></tr>\n        <tr><td>3</td><td>updateProcessing</td></tr>\n        <tr><td>4</td><td>upToDate</td></tr>\n        <tr><td>5</td><td>unknown</td></tr>\n      </table>\n      When \"ascending\" is specified in \"Sort order”, display the items in order from smallest priority value. <br>\n\n  *5) Priority of the Agent Update Mode is as below.\n      <table border=\"1\">\n        <tr><th>Priority Order</th><th>Value</th></tr>\n        <tr><td>1</td><td>notSupported</td></tr>\n        <tr><td>2</td><td>manual</td></tr>\n        <tr><td>3</td><td>auto</td></tr>\n      </table>\n      When \"ascending\" is specified in \"Sort order”, display the items in order from smallest priority value. <br>\n\n●Check content\n  - Error for other than specified value"
              order:
                enum:
                  - ascending
                  - descending
                type: string
                description: "Sort Order <br>\n  - ascending: Ascending\n  - descending: Descending\n\n●Check content\n  - Error for other than specified value"
          description: Sort Specification
    createAgentReq:
      required:
        - groupId
        - agentName
      type: object
      properties:
        groupId:
          type: string
          description: "Group ID of the group to register the agent.<br> ●Check content\n  - Error for null, null character (i.e. empty string)"
        agentName:
          type: string
          description: "Agent Name<br> ●Check content\n  - Error for null, null character (i.e. empty string)\n  - Duplication within the same tenant shall be an error."
    updateAgentInfoReq:
      required:
        - groupId
        - agentId
        - agentName
      type: object
      properties:
        groupId:
          type: string
          description: "Group ID of target agent.<br> ●Check content\n  - Error for null, null character (i.e. empty string)"
        agentId:
          type: string
          description: "target agentId<br> ●Check content\n  - Error for null, null character (i.e. empty string)"
        agentName:
          type: string
          description: "Agent Name<br> ●Check content\n  - Error for null, null character (i.e. empty string)\n  - Duplication within the same tenant shall be an error."
    deleteAgentReq:
      required:
        - groupId
        - agentIds
        - isExclude
      type: object
      properties:
        groupId:
          type: string
          description: "groupId of target group <br> ●Check content\n  - Error for null, null character (i.e. empty string)"
        agentIds:
          type: array
          items:
            type: string
            description: "target agentId<br> ●Check content\n  - A null is an error."
          description: "The agentId list of target agent.<br> ●Check content\n  - Empty list is allowed.\n  - A null is an error."
        isExclude:
          type: boolean
          description: "Specify agentIds details.\n  - true: agentIds is unselected agent.\n  - false: agentIds is selected agent.\n\n●Check content\n  - Error for other than true/false"
    downloadInstallerReq:
      required:
        - groupId
        - agentId
      type: object
      properties:
        groupId:
          type: string
          description: "Group ID of the group to register the agent.<br> ●Check content\n  - Error for null, null character (i.e. empty string)"
        agentId:
          type: string
          description: Agent ID of the agent that downloads the installer.
    confirmAgentInstallReq:
      required:
        - agentId
      type: object
      properties:
        agentId:
          type: string
          description: "target agentId<br> ●Check content\n  - Error for null, null character (i.e. empty string)"
    getActivationStatusReq:
      required:
        - agentId
      type: object
      properties:
        agentId:
          type: string
          description: "target agentId<br> ●Check content\n  - Error for null, null character (i.e. empty string)"
    requestActivationCodeReq:
      required:
        - agentId
      type: object
      properties:
        agentId:
          type: string
          description: "target agentId<br> ●Check content\n  - Error for null, null character (i.e. empty string)"
    inactivationReq:
      required:
        - agentId
      type: object
      properties:
        agentId:
          type: string
          description: "target agentId<br> ●Check content\n  - Error for null, null character (i.e. empty string)"
    setUpdateModeReq:
      required:
        - groupId
        - agentIds
        - isExclude
        - mode
        - retryMax
      type: object
      properties:
        groupId:
          type: string
          description: "groupId of target group <br> ●Check content\n  - Error for null, null character (i.e. empty string)"
        agentIds:
          type: array
          items:
            type: string
            description: "target agentId<br> ●Check content\n  - A null is an error."
          description: "The agentId list of target agent.<br> ●Check content\n  - Empty list is allowed.\n  - A null is an error."
        isExclude:
          type: boolean
          description: "Specify agentIds details.\n  - true: agentIds is unselected agent.\n  - false: agentIds is selected agent.\n\n●Check content\n  - Error for other than true/false"
        mode:
          enum:
            - auto
            - manual
          type: string
          description: "update mode<br>\n  - auto: auto update.\n  - manual: manual update.\n\n●Check content\n  - Error for other than auto/manual"
        retryMax:
          type: integer
          description: "Update retry max count. (0-5)<br>\n●Check content\n  - Anything other than 0 through 5 is an error."
    requestAgentUpdateReq:
      required:
        - groupId
        - agentIds
        - isExclude
      type: object
      properties:
        groupId:
          type: string
          description: "groupId of target group <br> ●Check content\n  - Error for null, null character (i.e. empty string)"
        agentIds:
          type: array
          items:
            type: string
            description: "target agentId<br> ●Check content\n  - A null is an error."
          description: "The agentId list of target agent.<br> ●Check content\n  - Empty list is allowed.\n  - A null is an error."
        isExclude:
          type: boolean
          description: "Specify agentIds details.\n  - true: agentIds is unselected agent.\n  - false: agentIds is selected agent.\n\n●Check content\n  - Error for other than true/false"
    getUpdateSuspendedListReq:
      required:
        - groupId
      type: object
      properties:
        groupId:
          type: string
          description: "groupId of target group <br> ●Check content\n  - Error for null, null character (i.e. empty string)"
    getAgentLogListReq:
      required:
        - groupId
      type: object
      properties:
        startIndex:
          type: integer
          description: "Start Index <br> ●Check content\n  - Error for other than numeric value"
          default: 0
        count:
          type: integer
          description: "Number of records <br> ●Check content\n  - Error for other than numeric value"
          default: 10
        groupId:
          type: string
          description: "groupId of target group <br> ●Check content\n  - Error for null, null character (i.e. empty string)"
        simpleFilters:
          type: array
          items:
            required:
              - key
              - value
            type: object
            properties:
              key:
                type: string
                description: "Filter key<br> Specifiable items are as below. - Filter key list\n  <table border=\"1\">\n    <tr><th>Key</th><th>Description</th></tr>\n    <tr><td>agentName</td><td>Agent name</td></tr>\n    <tr><td>hostName</td><td>Host name</td></tr>\n    <tr><td>ipAddress</td><td>IP Address</td></tr>\n    <tr><td>agentVersion</td><td>Agent Version</td></tr>\n    <tr><td>logStatus</td><td>Agent log upload Status</td></tr>\n  </table>\n\n●Check content\n  - Error for other than specified value"
              value:
                type: string
                description: "Filtering target strings <br> Strings that are Specifiable in filter key are as below.\n- Filtering target strings\n  <table border=\"1\">\n    <tr><th>Key</th><th>Description</th></tr>\n    <tr><td>agentName</td><td>Specify input value</td></tr>\n    <tr><td>hostName</td><td>Specify input value</td></tr>\n    <tr><td>ipAddress</td><td>Specify input value</td></tr>\n    <tr><td>agentVersion</td><td>Specify input value</td></tr>\n    <tr><td>logStatus</td><td>\n      <table border=\"1\">\n        <tr><td>success</td></tr>\n        <tr><td>failure</td></tr>\n        <tr><td>processing</td></tr>\n        <tr><td>reserved</td></tr>\n        <tr><td>notYet</td></tr>\n      </table>\n    </td></tr>\n  </table>"
          description: Simple Filter
        orderBy:
          type: array
          items:
            required:
              - key
              - order
            type: object
            properties:
              key:
                type: string
                description: "Sort Key <br> Specifiable items are as below.\n- Sort Key list\n  <table border=\"1\">\n    <tr><th>Key</th><th>Description</th></tr>\n    <tr><td>agentName</td><td>Agent name</td></tr>\n    <tr><td>hostName</td><td>Host name</td></tr>\n    <tr><td>ipAddress</td><td>IP Address</td></tr>\n    <tr><td>agentVersion</td><td>Agent Version(*1)</td></tr>\n    <tr><td>logStatus</td><td>Agent log upload Status(*2)</td></tr>\n    <tr><td>logStatusTimestamp</td><td>Log status Update Timestamp</td></tr>\n  </table>\n\n  *1) Sort by character code.\n\n  *2) Priority of the Agent Log Status is as below.\n      <table border=\"1\">\n        <tr><th>Priority Order</th><th>Value</th></tr>\n        <tr><td>1</td><td>failure</td></tr>\n        <tr><td>2</td><td>success</td></tr>\n        <tr><td>3</td><td>processing</td></tr>\n        <tr><td>4</td><td>reserved</td></tr>\n        <tr><td>5</td><td>notYet</td></tr>\n      </table>\n      When \"ascending\" is specified in \"Sort order”, display the items in order from smallest priority value. <br>\n\n●Check content\n  - Error for other than specified value"
              order:
                enum:
                  - ascending
                  - descending
                type: string
                description: "Sort Order <br>\n  - ascending: Ascending\n  - descending: Descending\n\n●Check content\n  - Error for other than specified value"
          description: Sort Specification
    downloadAgentLogReq:
      required:
        - agentId
      type: object
      properties:
        agentId:
          type: string
          description: "target agentId<br> ●Check content\n  - Error for null, null character (i.e. empty string)"
    changeEmbeddedAgentConfigReq:
      required:
        - deviceId
        - command
      type: object
      properties:
        deviceId:
          type: string
          description: "Device with the target Embedded Agent installed.<br> ●Check content\n  - Error for null, null character (i.e. empty string)\n  - Error if The specified device does not have an embedded agent."
        command:
          type: string
          description: "Request command.<br>\n  - enableAgent: Enable the Embedded Agent.\n  - disableAgent: Disable the Embedded Agent.\n  \n●Check content\n  - Error for other than specified value"
    globalRemoteOperationUrlReq:
      required:
        - deviceId
      type: object
      properties:
        deviceId:
          type: string
          description: "deviceId of target device<br>\n●Check content\n  - A null or empty string is an error."
    connectGlobalRemoteOperationReq:
      required:
        - deviceId
        - connectGroup
        - connectionId
      type: object
      properties:
        deviceId:
          type: string
          description: "deviceId of target device<br>\n●Check content\n  - A null or empty string is an error."
        connectGroup:
          type: string
          description: "Connection group to connect to Azure Web Pubsub.<br> Use the value obtained in the response parameter of globalRemoteOperationUrl().<br>\n●Check content\n  - A null or empty string is an error."
        connectionId:
          type: string
          description: "ID to connect to the Agent using Azure Web PubSub.<br> After connecting to Web PubSub, use the value sent to you.<br>\n●Check content\n  - A null or empty string is an error."
    getFoundDeviceListReq:
      required:
        - agentId
        - discoveryMethod
      type: object
      properties:
        agentId:
          type: string
          description: "agentId of target AgentIDP<br> ●Check content\n  - A null or empty string is an error."
        discoveryMethod:
          type: string
          description: "Method used to discovery devices.\n  - snmp: Discovery using SNMP. (Discover MFP/Printer device.)\n  - dataFile: Discovery using Data file. (Discover Production device.)\n\n●Check content\n  - Any string other than the specified string is an error."
    getAgentListRsp:
      type: object
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        startIndex:
          type: integer
          description: Start Index (Same as request parameter)
        count:
          type: integer
          description: Number of requests (Same as request parameter)
        resultCount:
          type: integer
          description: Number of items acquired this time
        totalCount:
          type: integer
          description: Total number of search result
        agentList:
          type: array
          items:
            type: object
            properties:
              agentId:
                type: string
                description: agentId
              agentName:
                type: string
                description: Agent Name
              hostName:
                type: string
                description: Host name
              ipAddress:
                type: string
                description: IP Address
              agentVersion:
                type: string
                description: Agent version
              connectionStatusSignal:
                type: string
                description: "Connection status signal<br> Returns a value according to connectionStatus.<br>\n  <table border=\"1\">\n    <tr><th>Value</th><th>Description</th></tr>\n    <tr><td>normal</td><td>connectionStatus is 'connected'</td></tr>\n    <tr><td>error</td><td>connectionStatus is 'disconnected'</td></tr>\n    <tr><td>warning</td><td>connectionStatus is 'newlyInstalled' or 'updating' or 'inactivated'</td></tr>\n    <tr><td>unknown</td><td>connectionStatus is 'notInstalled'</td></tr>\n  </table>"
              connectionStatus:
                type: string
                description: "Connection status of the agent.<br>\n  <table border=\"1\">\n    <tr><th>Value</th><th>Description</th></tr>\n    <tr><td>notInstalled</td><td>Not connected due to not installed yet</td></tr>\n    <tr><td>newlyInstalled</td><td>Newly connected to Agent(Received status report from agent.)</td></tr>\n    <tr><td>connected</td><td>Connected to Agent(Received status report from agent.)</td></tr>\n    <tr><td>disconnected</td><td>Not connected after installation(When IoT Hub detects disconnection.)</td></tr>\n    <tr><td>updating</td><td>Update starting(When an update start notification is received.)</td></tr>\n    <tr><td>inactivated</td><td>Agent is inactive.</td></tr>\n  </table>"
              updateMode:
                type: string
                description: "Agent update mode.<br> <table border=\"1\">\n  <tr><th>Value</th><th>Description</th></tr>\n  <tr><td>auto</td><td>Update mode is auto update mode.</td></tr>\n  <tr><td>manual</td><td>Update mode is manual update mode.</td></tr>\n  <tr><td>notSupported</td><td>Update Mode is not supported with the version.</td></tr>\n</table>"
              updateStatus:
                type: string
                description: "Agent update status.<br> If there is a difference between the latest version and the current version, it will be judged as \"new version available\". <table border=\"1\">\n  <tr><th>Value</th><th>Description</th></tr>\n  <tr><td>unknown</td><td>Cannot judge status during Not Activated.</td></tr>\n  <tr><td>upToDate</td><td>Agent is up to date.</td></tr>\n  <tr><td>updateRequired</td><td>New agent version is ready to update.</td></tr>\n  <tr><td>updateProcessing</td><td>New agent is being updated.</td></tr>\n  <tr><td>updateSuspended</td><td>Update is suspended. (Because the count of update failures exceeded max count.)</td></tr>\n</table>"
              latestUpdateTimestamp:
                type: integer
                description: latest update timestamp
                format: int64
              updateRetryCount:
                type: integer
                description: Update Retry Count.
              updateRetryMax:
                type: integer
                description: Update Retry Max
              relatedAgent:
                type: array
                items:
                  type: object
                  properties:
                    agentId:
                      type: string
                      description: agentId
                    protocol:
                      enum:
                        - mib
                        - tco
                        - fss
                        - log
                        - idp
                      type: string
                      description: protocol
                description: Related agent list.
          description: Agent List
    createAgentRsp:
      type: object
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        agentId:
          type: string
          description: 'The agentId of the newly created agent. '
    updateAgentInfoRsp:
      type: object
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
    deleteAgentRsp:
      type: object
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
    downloadInstallRsp:
      type: object
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        url:
          type: string
          description: Agent Installer download url.
    confirmAgentInstallRsp:
      type: object
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
    getActivationStatusRsp:
      type: object
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        status:
          type: string
          description: "Activation status.<br>\n  - inactivated:   Agent is not activated.\n  - generatedCode: Activation code has been generated\n  - expiredCode:   Activation code has expired.\n  - activated:     Agent has been activated."
        code:
          type: string
          description: 'Activation code.<br> If status is other than "generatedCode", return an empty string.'
        activationTimestamp:
          type: number
          description: 'Date and time the agent was activated. (format is timestamp)<br> If status is other than "activated", return zero.'
        validPeriod:
          type: number
          description: 'Activation Code validity period. (unit: seconds)<br> If status is other than "generatedCode", return zero.'
    requestActivationCodeRsp:
      type: object
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        code:
          type: string
          description: Generated activation code.
        validPeriod:
          type: number
          description: 'Activation Code validity period. (unit: seconds)'
    inactivationRsp:
      type: object
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
    setUpdateModeRsp:
      type: object
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
    requestAgentUpdateRsp:
      type: object
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
    getUpdateSuspendedListRsp:
      type: object
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        agentNames:
          type: array
          items:
            type: string
            description: Agent Name
    getAgentLogListRsp:
      type: object
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        startIndex:
          type: integer
          description: Start Index (Same as request parameter)
        count:
          type: integer
          description: Number of requests (Same as request parameter)
        resultCount:
          type: integer
          description: Number of items acquired this time
        totalCount:
          type: integer
          description: Total number of search result
        agentLogList:
          type: array
          items:
            type: object
            properties:
              agentId:
                type: string
                description: agentId
              agentName:
                type: string
                description: Agent Name
              hostName:
                type: string
                description: Host name
              ipAddress:
                type: string
                description: IP Address
              agentVersion:
                type: string
                description: Agent version
              connectionStatus:
                type: string
                description: "Connection status of the agent.\n  * `connected` - Agent is connected(Received status report from agent.)\n  * `disconnected` - Agent is not connected."
              activateStatus:
                type: string
                description: "Agent activate status.\n  * `activated` - Agent is activated.\n  * `inactivated` - Agent is not activated.(Includes activation code generated.)"
              logStatus:
                type: string
                description: "Agent log upload status.\n  * `success` - Agent log upload was successful.\n  * `failure` - Agent log upload failed.\n  * `processing` - Agent log upload is in progress.\n  * `reserved` - Agent log upload request is reserved.\n  * `notYet` - Agent log upload is not yet."
              logStatusTimestamp:
                type: integer
                description: Log status update timestamp.
                format: int64
              uploadLog:
                type: string
                description: "Availability of downloading agent logs.\n  * `available` - Agent logs are available for download.(Agent logs have been uploaded. and within the expiration date.)\n  * `notAvailable` - Agent logs cannot be downloaded.(Agent logs have not been uploaded. Or, it has expired.)"
          description: Agent Log List
    downloadAgentLogRsp:
      type: object
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        url:
          type: string
          description: Agent log download url.
    changeEmbeddedAgentConfigRsp:
      type: object
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
    globalRemoteOperationUrlRsp:
      type: object
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        connectGroup:
          type: string
          description: Connection group to connect to Azure Web PubSub.
        connectionUrl:
          type: string
          description: URL to connect to Azure Web PubSub.
    connectGlobalRemoteOperationRsp:
      type: object
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
    getFoundDeviceListRsp:
      type: object
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        deviceList:
          type: array
          items:
            type: object
            properties:
              modelName:
                type: string
                description: Model Name
              serialNumber:
                type: string
                description: Serial Number
              ipAddress:
                type: string
                description: IP Address
              macAddress:
                type: string
                description: MAC Address
              friendlyName:
                type: string
                description: Printer Name
              familyName:
                type: string
                description: Family Name(Family ID)
              snmpSetting:
                type: object
                properties:
                  snmpVersion:
                    type: string
                    description: "SNMP Version<br>\n  - v1: SNMPv1\n  - v3: SNMPv3"
                  getCommunityString:
                    type: string
                    description: Community String.<br> (This is set when snmpVersion is v1.)
                  contextName:
                    type: string
                    description: Context Name.<br> (This is set when snmpVersion is v3.)
                  userName:
                    type: string
                    description: User Name.<br> (This is set when snmpVersion is v3.)
                  securityAuthType:
                    type: string
                    description: "Security Authentication Type.<br> (This is set when snmpVersion is v3.)\n  - MD5: MD5\n  - SHA-1: SHA-1"
                  securityAuthKey:
                    type: string
                    description: Security Authentication Key.<br> (This is set when snmpVersion is v3.)
                  securityPrivType:
                    type: string
                    description: "Security Privacy Type.<br> (This is set when snmpVersion is v3.)\n  - DES: DES\n  - usmAesCfb128Protocol: AES"
                  securityPrivKey:
                    type: string
                    description: Security Privacy Key.<br> (This is set when snmpVersion is v3.)
                description: SNMP Credential & Setting<br> This is set in the parameter when "discoveryMethod" is "snmp".
              retry:
                type: integer
                description: SNMP Retry count.<br> This is set in the parameter when "discoveryMethod" is "snmp".
              timeout:
                type: integer
                description: SNMP Timeout.<br> This is set in the parameter when "discoveryMethod" is "snmp".
                format: int64
              fileFilter:
                type: string
                description: File filter <br> Filter string to retrieve the device information file.<br> This is set in the parameter when "discoveryMethod" is "dataFile".
          description: Found device list.
    commonRsp:
      type: object
      properties:
        errorList:
          type: array
          items:
            type: object
            properties:
              errorCode:
                type: string
                description: "Error Code\n  - Error Code list\n    <table border=\"1\">\n      <tr><th>Error code</th><th>Description</th></tr>\n      <tr><td>E0001</td><td>DB Access Error</td></tr>\n      <tr><td>E0004</td><td>JSON Path error</td></tr>\n      <tr><td>E0011</td><td>Parameter mandatory check error</td></tr>\n      <tr><td>E0014</td><td>Parameter format check error</td></tr>\n      <tr><td>E0018</td><td>The specified Agent has never connected</td></tr>\n      <tr><td>E0019</td><td>When target instance (group or device etc.) does not exist</td></tr>\n      <tr><td>E0021</td><td>Invalid token</td></tr>\n      <tr><td>E0023</td><td>Activation code cannot be generated.</td></tr>\n      <tr><td>E0024</td><td>No permission Error</td></tr>\n      <tr><td>E0026</td><td>Session timeout error</td></tr>\n      <tr><td>E0044</td><td>Target contains non-operational instances.</td></tr>\n      <tr><td>E0048</td><td>Identical value input check error</td></tr>\n      <tr><td>E0050</td><td>Error other than specified group management</td></tr>\n    </table>"
              errorField:
                type: string
                description: Parameter field where error occurred
              errorValue:
                type: string
                description: Value that result into an error
              errorMessage:
                type: string
                description: Error message (Text that human can understand)
  securitySchemes:
    apiKeyHeader:
      type: apiKey
      name: Ocp-Apim-Subscription-Key
      in: header
    authorization:
      type: apiKey
      name: Authorization
      in: header
security:
  - apiKeyHeader: [ ]
  - authorization: [ ]
tags:
  - name: Agent Management
    description: API of Agent Management.
  - name: Agent Function
    description: API of Agent function.