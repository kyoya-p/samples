openapi: 3.0.1
info:
  title: Display-API
  description: This document is API specification of RMM Display Device Management API.
  version: '1.0'
servers:
  - url: https://rmm-mfpdev-apim.azure-api.net/idp
paths:
  /device/getDeviceList/:
    post:
      tags:
        - Display Device Management
      summary: Get device list.
      description: Returns the list of devices in the specified group.<br> Returns the device information whose "type" is "display" in the "deviceLatest" collection.
      operationId: post-device-getdevicelist
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/getDeviceListReq'
            example:
              startIndex: 0
              count: 10
              groupId: string
              simpleFilters:
                - key: string
                  value: string
              orderBy:
                - key: string
                  order: ascending
      responses:
        '200':
          description: Device list acquisition result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getDeviceListRsp'
              example:
                common:
                  errorList:
                    - errorCode: string
                      errorField: string
                      errorValue: string
                      errorMessage: string
                startIndex: 0
                count: 0
                resultCount: 0
                totalCount: 0
                deviceList:
                  - deviceId: string
                    modelName: string
                    serialNumber: string
                    friendlyName: string
                    ipAddress: string
                    macAddress: string
                    firmwareVersion: string
                    agentName: string
                    tagIds:
                      - string
                    communicationStatus: string
                    powerStatus: STANDBY
                    errorLevel: error
                    hardwareStatus: string
                    inputMode: DVI-D
                    usageTime: 0
                    temperatureSensorStatus: 0
                    createTimestamp: 0
                    updateTimestamp: 0
                    scheduleId: string
                    scheduleName: string
  /device/getDeviceDetail/:
    post:
      tags:
        - Display Device Management
      summary: Get device detail.
      description: Returns the device detail information.
      operationId: post-device-getdevicedetail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/getDeviceDetailReq'
            example:
              deviceId: string
      responses:
        '200':
          description: Device detail information acquisition result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getDeviceDetailRsp'
              example:
                common:
                  errorList:
                    - errorCode: string
                      errorField: string
                      errorValue: string
                      errorMessage: string
                deviceId: string
                modelName: string
                serialNumber: string
                friendlyName: string
                tagNames:
                  - string
                agentName: string
                scheduleName: string
                firmwareVersion: string
                powerStatus: STANDBY
                createTimestamp: 0
                updateTimestamp: 0
                inputMode: DVI-D
                displaySize: WIDE
                colorMode: STD
                brightness: 0
                volume: 0
                mute: ON
                direction: LANDSCAPE
                temperatureSensorStatus: 0
                temperature:
                  - 0
                usageTime: 0
                hardwareStatus: string
                ipAddress: string
                macAddress: string
                communicationStatus: string
                errorLevel: error
  /device/registerDevice/:
    post:
      tags:
        - Display Device Management
      summary: Register Device
      description: Register the device information.
      operationId: post-device-registerdevice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/registerDeviceReq'
            example:
              agentId: string
              registerDeviceList:
                - modelName: string
                  serialNumber: string
                  friendlyName: string
                  ipAddress: string
                  port: 0
                  userName: string
                  password: string
                  familyName: string
                  type: string
      responses:
        '200':
          description: Register device result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/registerDeviceRsp'
              example:
                common:
                  errorList:
                    - errorCode: string
                      errorField: string
                      errorValue: string
                      errorMessage: string
  /device/deleteDevice/:
    post:
      tags:
        - Display Device Management
      summary: Delete devices.
      description: Deletes the device information of the specified "deviceId" and the related information.
      operationId: post-device-deletedevice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deleteDeviceReq'
            example:
              groupId: string
              deviceIds:
                - string
              isExclude: true
      responses:
        '200':
          description: Device deletion result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deleteDeviceRsp'
              example:
                common:
                  errorList:
                    - errorCode: string
                      errorField: string
                      errorValue: string
                      errorMessage: string
  /device/executeUpdateInformation/:
    post:
      tags:
        - Display Device Management
      summary: 'Execute device information update '
      description: Executes information acquisition for the specified device.
      operationId: post-device-executeupdateinformation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/executeUpdateInformationReq'
            example:
              groupId: string
              deviceIds:
                - string
              isExclude: true
      responses:
        '200':
          description: 'Device information update request results.<br> If the group of the specified groupId does not exist, it returns an E0019 error.<br> If the device with the deviceId specified in deviceIds does not exist, it is not an error and is not included in the execution target.<br>'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/executeUpdateInformationRsp'
              example:
                common:
                  errorList:
                    - errorCode: string
                      errorField: string
                      errorValue: string
                      errorMessage: string
  /device/executeManagePower/:
    post:
      tags:
        - Display Device Management
      summary: Execute power management commands.
      description: Executes power management commands for the specified device.
      operationId: post-device-executemanagepower
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/executeManagePowerReq'
            example:
              groupId: string
              command: standby
              deviceIds:
                - string
              isExclude: true
      responses:
        '200':
          description: 'Power management commands request results.<br> If the group of the specified groupId does not exist, it returns an E0019 error.<br> If the device with the deviceId specified in deviceIds does not exist, it is not an error and is not included in the execution target.<br>'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/executeManagePowerRsp'
              example:
                common:
                  errorList:
                    - errorCode: string
                      errorField: string
                      errorValue: string
                      errorMessage: string
                discardDeviceIds:
                  - string
  /device/executeChangeInputMode/:
    post:
      tags:
        - Display Device Management
      summary: Execute the input mode switching commands.
      description: Executes the input mode switching command for the specified device.
      operationId: post-device-executechangeinputmode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/executeChangeInputModeReq'
            example:
              groupId: string
              command: toggleChange
              deviceIds:
                - string
              isExclude: true
      responses:
        '200':
          description: 'Input mode switching command request results.<br> If the group of the specified groupId does not exist, it returns an E0019 error.<br> If the device with the deviceId specified in deviceIds does not exist, it is not an error and is not included in the execution target.<br>'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/executeChangeInputModeRsp'
              example:
                common:
                  errorList:
                    - errorCode: string
                      errorField: string
                      errorValue: string
                      errorMessage: string
                discardDeviceIds:
                  - string
  /device/applyDeviceSchedule/:
    post:
      tags:
        - Display Device Management
      summary: Apply Device Schedule
      description: Apply a device schedule to a device.
      operationId: post-device-applydeviceschedule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/applyDeviceScheduleReq'
            example:
              groupId: string
              scheduleId: string
              deviceIds:
                - string
              isExclude: true
      responses:
        '200':
          description: 'Device schedule application result. If the group of the specified groupId does not exist, it returns an E0019 error.<br> If the device with the deviceId specified in deviceIds does not exist, it is not an error and is not included in the execution target.<br>'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/applyDeviceScheduleRsp'
              example:
                common:
                  errorList:
                    - errorCode: string
                      errorField: string
                      errorValue: string
                      errorMessage: string
  /device/getDeviceSchedule/:
    post:
      tags:
        - Display Device Management
      summary: Get Device Schedule
      description: Get the device schedule.
      operationId: post-device-getdeviceschedule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/getDeviceScheduleReq'
            example:
              deviceId: string
      responses:
        '200':
          description: 'Get Device schedule result. If the group of the specified groupId does not exist, it returns an E0019 error.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getDeviceScheduleRsp'
              example:
                common:
                  errorList:
                    - errorCode: string
                      errorField: string
                      errorValue: string
                      errorMessage: string
                schedule:
                  scheduleId: string
                  scheduleName: string
                  operationList:
                    - operationType: powersave
                      inputChangeFlag: true
                      inputChange: string
                      timeZone: string
                      executeStartDate: 0
                      recurrence: 1
                      dayOfWeek:
                        - 0
                      timeList:
                        - time:
                            hour: 0
                            minute: 0
  /device/updateDeviceInfo/:
    post:
      tags:
        - Display Device Management
      summary: Update Device information
      description: Update device information.
      operationId: post-device-updatedeviceinfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateDeviceInfoReq'
            example:
              deviceId: string
              friendlyName: string
      responses:
        '200':
          description: 'Update Device information result. If target device does not exist, it returns an E0019 error.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/updateDeviceInfoRsp'
              example:
                common:
                  errorList:
                    - errorCode: string
                      errorField: string
                      errorValue: string
                      errorMessage: string
  /agent/getSearchTargetList/:
    post:
      tags:
        - Display Device Agent Management
      summary: Get Search target list.
      description: Returns the list of search targets in the specified agent.
      operationId: post-agent-getsearchtargetlist
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/getSearchTargetListReq'
            example:
              startIndex: 0
              count: 10
              agentId: string
              simpleFilters:
                - key: string
                  value: string
              orderBy:
                - key: string
                  order: ascending
      responses:
        '200':
          description: Search target list acquisition result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSearchTargetListRsp'
              example:
                common:
                  errorList:
                    - errorCode: string
                      errorField: string
                      errorValue: string
                      errorMessage: string
                startIndex: 0
                count: 0
                resultCount: 0
                totalCount: 0
                targetList:
                  - targetId: string
                    targetAddress: string
                    port: 0
                    userName: string
                    friendlyName: string
  /agent/addSearchTarget/:
    post:
      tags:
        - Display Device Agent Management
      summary: Add Search target list.
      description: Add a search target to the specified Agent.
      operationId: post-agent-addsearchtarget
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addSearchTargetReq'
            example:
              agentId: string
              searchTargetList:
                - targetAddress: string
                  port: 0
                  userName: string
                  password: string
                  friendlyName: string
      responses:
        '200':
          description: Results of adding search targets
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addSearchTargetRsp'
              example:
                common:
                  errorList:
                    - errorCode: string
                      errorField: string
                      errorValue: string
                      errorMessage: string
  /agent/getSearchTarget/:
    post:
      tags:
        - Display Device Agent Management
      summary: Get Search target.
      description: Retrieves the specified search target information.
      operationId: post-agent-getsearchtarget
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/getSearchTargetReq'
            example:
              agentId: string
              targetId: string
      responses:
        '200':
          description: Search Target Information Acquisition Result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSearchTargetRsp'
              example:
                common:
                  errorList:
                    - errorCode: string
                      errorField: string
                      errorValue: string
                      errorMessage: string
                targetId: string
                targetAddress: string
                port: 0
                userName: string
                friendlyName: string
  /agent/updateSearchTarget/:
    post:
      tags:
        - Display Device Agent Management
      summary: Update Search target infomation.
      description: Update the specified search target information.
      operationId: post-agent-updatesearchtarget
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateSearchTargetReq'
            example:
              agentId: string
              targetId: string
              targetAddress: string
              port: 0
              userName: string
              changePassword: true
              password: string
              friendlyName: string
      responses:
        '200':
          description: Search target information update result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/updateSearchTargetRsp'
              example:
                common:
                  errorList:
                    - errorCode: string
                      errorField: string
                      errorValue: string
                      errorMessage: string
  /agent/deleteSearchTarget/:
    post:
      tags:
        - Display Device Agent Management
      summary: Delete the search targets.
      description: Deletes the specified search target information.
      operationId: post-agent-deletesearchtarget
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deleteSearchTargetReq'
            example:
              agentId: string
              targetIds:
                - string
              isExclude: true
      responses:
        '200':
          description: The search target deletion result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deleteSearchTargetRsp'
              example:
                common:
                  errorList:
                    - errorCode: string
                      errorField: string
                      errorValue: string
                      errorMessage: string
  /agent/executeDeviceSearch/:
    post:
      tags:
        - Display Device Agent Management
      summary: Request a device search.
      description: Request a device search to the specified agent.
      operationId: post-agent-executedevicesearch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/executeDeviceSearchReq'
            example:
              agentId: string
              requestOwnerId: string
      responses:
        '200':
          description: Device Search Request Results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/executeDeviceSearchRsp'
              example:
                common:
                  errorList:
                    - errorCode: string
                      errorField: string
                      errorValue: string
                      errorMessage: string
                timeout: 0
                targetCount: 0
  /agent/getSSHKeyStatus:
    post:
      tags:
        - Display Device Agent Management
      summary: Get SSH key generation status
      description: Get the SSH key generation status of the specified Agent.
      operationId: post-agent-getsshkeystatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/getSSHKeyStatusReq'
            example:
              agentId: string
      responses:
        '200':
          description: Returns the SSH key registration status of the specified Agent
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSSHKeyStatusRsp'
              example:
                common:
                  errorList:
                    - errorCode: string
                      errorField: string
                      errorValue: string
                      errorMessage: string
                status: string
  /agent/downloadSSHKey:
    post:
      tags:
        - Display Device Agent Management
      summary: Request registered SSH key download
      description: Requests the download of the SSH key of the specified Agent.
      operationId: post-agent-downloadsshkey
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/downloadSSHKeyReq'
            example:
              agentId: string
      responses:
        '200':
          description: Returns the download URL of the SSH key for the specified Agent.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/downloadSSHKeyRsp'
              example:
                common:
                  errorList:
                    - errorCode: string
                      errorField: string
                      errorValue: string
                      errorMessage: string
                url: string
  /schedule/getScheduleList/:
    post:
      tags:
        - Display Device Schedule Management
      summary: Get the schedule list.
      description: Gets the list of schedules for the specified group.
      operationId: post-schedule-getschedulelist
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/getScheduleListReq'
            example:
              groupId: string
      responses:
        '200':
          description: Result of schedule list acquisition
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getScheduleListRsp'
              example:
                common:
                  errorList:
                    - errorCode: string
                      errorField: string
                      errorValue: string
                      errorMessage: string
                scheduleList:
                  - scheduleName: string
                    select: 1
                    interval: 0
                    isEnabled: true
  /schedule/setScheduleList/:
    post:
      tags:
        - Display Device Schedule Management
      summary: Update the schedule list.
      description: Updates the schedule list for the specified agent.
      operationId: post-schedule-setschedulelist
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/setScheduleListReq'
            example:
              groupId: string
              scheduleList:
                - scheduleName: string
                  select: 1
                  interval: 0
                  isEnabled: true
      responses:
        '200':
          description: Schedule List Update Result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/setScheduleListRsp'
              example:
                common:
                  errorList:
                    - errorCode: string
                      errorField: string
                      errorValue: string
                      errorMessage: string
  /agent/getFoundDeviceList:
    post:
      tags:
        - Display Device Agent Management
      summary: Get Found device list.
      description: Returns the list of found devices in the specified agent.
      operationId: post-agent-getfounddevicelist
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/getFoundDeviceListReq'
            example:
              agentId: string
      responses:
        '200':
          description: List of found devices.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getFoundDeviceListRsp'
              example:
                common:
                  errorList:
                    - errorCode: string
                      errorField: string
                      errorValue: string
                      errorMessage: string
                deviceList:
                  - modelName: string
                    serialNumber: string
                    friendlyName: string
                    ipAddress: string
                    port: 0
                    userName: string
                    password: string
                    familyName: string
                    type: string
components:
  schemas:
    getDeviceListReq:
      required:
        - groupId
      type: object
      properties:
        startIndex:
          type: integer
          description: "Start Index <br> ●Check content\n  - Error for other than numeric value"
          default: 0
        count:
          type: integer
          description: "Number of records <br> ●Check content\n  - Error for other than numeric value"
          default: 10
        groupId:
          type: string
          description: "groupId of target group <br> ●Check content\n  - A null or empty string is an error."
        simpleFilters:
          type: array
          items:
            required:
              - key
              - value
            type: object
            properties:
              key:
                type: string
                description: "Filter key<br> Specifiable items are as below. - Filter key list\n  <table border=\"1\">\n    <tr><th>Key</th><th>Description</th></tr>\n    <tr><td>modelName</td><td>Model name</td></tr>\n    <tr><td>serialNumber</td><td>Serial number</td></tr>\n    <tr><td>friendlyName</td><td>Custom Name</td></tr>\n    <tr><td>powerStatus</td><td>Power Status</td></tr>\n    <tr><td>errorLevel</td><td>Alert value</td></tr>\n    <tr><td>hardwareStatus</td><td>Hardware Status</td></tr>\n    <tr><td>communicationStatus</td><td>Communication Status</td></tr>\n    <tr><td>inputMode</td><td>Input Mode</td></tr>\n    <tr><td>ipAddress</td><td>IP Adddress</td></tr>\n    <tr><td>tagIds</td><td>Tag Ids</td></tr>\n    <tr><td>temperatureSensorStatus</td><td>Temperature Sensor Status</td></tr>\n    <tr><td>firmwareVersion</td><td>Firmware version</td></tr>\n    <tr><td>macAddress</td><td>MAC Address</td></tr>\n    <tr><td>agentName</td><td>Related Agent Name</td></tr>\n  </table>\n\n●Check content\n  - Error for other than specified value"
              value:
                type: string
                description: "Filtering target strings <br> Strings that are Specifiable in filter key are as below.\n- Filtering target strings\n  <table border=\"1\">\n    <tr><th>Key</th><th>Description</th></tr>\n    <tr><td>modelName</td><td>Specify input value</td></tr>\n    <tr><td>serialNumber</td><td>Specify input value</td></tr>\n    <tr><td>friendlyName</td><td>Specify input value</td></tr>\n    <tr><td>powerStatus</td><td>\n    <table border=\"1\">\n      <tr><td>STANDBY</td></tr>\n      <tr><td>NORMAL</td></tr>\n      <tr><td>NOSIGNAL</td></tr>\n    </table></td></tr>\n    <tr><td>errorLevel</td><td>\n    <table border=\"1\">\n      <tr><td>error</td></tr>\n      <tr><td>warning</td></tr>\n      <tr><td>normal</td></tr>\n    </table></td></tr>\n    <tr><td>hardwareStatus</td>\n      <td><table border=\"1\">\n        <tr><td>normal</td><td>ALL \"0\" or \"AAAA\" is all \"0\" and \"BBCCDD-EE-FGGG\" is anyone not \"0\" or \"A100\"</td><tr>\n        <tr><td>notAvailable</td><td>ERR</td><tr>\n        <tr><td>unknown</td><td>UNKNOWN or UNSELECTED</td><tr>\n        <tr><td>warning</td><td>\"A1EC\"(SNDS device only)</td><tr>\n        <tr><td>error</td><td>\"AAAA\" of hardwareStatus is anyone not \"0\" or all other \"A1xx\"</td><tr>\n      </table></td>\n    </tr>\n    <tr><td>communicationStatus</td><td>ok(\"communicationStatus\" is \"0000\".),<br>error(\"communicationStatus\" is not \"0000\".)</td></tr>\n    <tr><td>inputMode</td>\n    <td><table border=\"1\">\n      <tr><td>DVI-D</td></tr>\n      <tr><td>D-SUB1</td></tr>\n      <tr><td>D-SUB2</td></tr>\n      <tr><td>D-SUB3</td></tr>\n      <tr><td>HDMI-AV</td></tr>\n      <tr><td>HDMI1</td></tr>\n      <tr><td>USB</td></tr>\n      <tr><td>HDMI2</td></tr>\n      <tr><td>D-PORT1</td></tr>\n      <tr><td>HDMI3</td></tr>\n      <tr><td>OPTION</td></tr>\n      <tr><td>D-PORT2</td></tr>\n      <tr><td>APPLICATION</td></tr>\n      <tr><td>TV</td></tr>\n      <tr><td>USB-C</td></tr>\n      <tr><td>DSUB2</td></tr>\n      <tr><td>DVD</td></tr>\n      <tr><td>TUNER1</td></tr>\n      <tr><td>HOME</td></tr>\n      <tr><td>COMPUTE</td></tr>\n      <tr><td>APPLICATION1</td></tr>\n      <tr><td>APPLICATION2</td></tr>\n      <tr><td>APPLICATION3</td></tr>\n      <tr><td>APPLICATION4</td></tr>\n      <tr><td>APPLICATION5</td></tr>\n      <tr><td>APPLICATION6</td></tr>\n    </table></td>\n    </tr>\n    <tr><td>ipAddress</td><td>Specify input value</td></tr>\n    <tr><td>tagIds</td><td>Specify input value</td></tr>\n    <tr><td>temperatureSensorStatus</td>\n      <td><table border=\"1\">\n        <tr><td>ok</td><td>\"temperatureSensorStatus\" is \"0\".</td></tr>\n        <tr><td>notApplicable</td><td>\"temperatureSensorStatus\" is \"-9999\", or \"-9998\", or \"-9997\".</td></tr>\n        <tr><td>error</td><td>\"temperatureSensorStatus\" is other.</td></tr>\n      </table></td></tr>\n    <tr><td>firmwareVersion</td><td>Specify input value</td></tr>\n    <tr><td>macAddress</td><td>Specify input value</td></tr>\n    <tr><td>agentName</td><td>Specify input value</td></tr>\n  </table>"
          description: Simple Filter
        orderBy:
          type: array
          items:
            required:
              - key
              - order
            type: object
            properties:
              key:
                type: string
                description: "Sort Key <br> Specifiable items are as below.\n- Sort Key list\n  <table border=\"1\">\n    <tr><th>Key</th><th>Description</th></tr>\n    <tr><td>modelName</td><td>Model name</td></tr>\n    <tr><td>serialNumber</td><td>Serial number</td></tr>\n    <tr><td>friendlyName</td><td>Custom Name</td></tr>\n    <tr><td>powerStatus</td><td>Power Status(*1)</td></tr>\n    <tr><td>errorLevel</td><td>Alert value(*2)</td></tr>\n    <tr><td>hardwareStatus</td><td>Hardware Status(*6)</td></tr>\n    <tr><td>communicationStatus</td><td>Communication Status (*3)</td></tr>\n    <tr><td>inputMode</td><td>Input Mode(*4)</td></tr>\n    <tr><td>ipAddress</td><td>IP Adddress</td></tr>\n    <tr><td>usageTime</td><td>Usage Time</td></tr>\n    <tr><td>temperatureSensorStatus</td><td>Temperature Sensor Status(*5)</td></tr>\n    <tr><td>createTimestamp</td><td>Registered Time</td></tr>\n    <tr><td>updateTimestamp</td><td>Last Status Update</td></tr>\n    <tr><td>firmwareVersion</td><td>Firmware version</td></tr>\n    <tr><td>macAddress</td><td>MAC Address</td></tr>\n    <tr><td>agentName</td><td>Related Agent Name</td></tr>\n  </table>\n\n  *1) Priority of the Power Status is as below.\n      <table border=\"1\">\n        <tr><th>Priority Order</th><th>Value</th></tr>\n        <tr><td>1</td><td>STANDBY</td></tr>\n        <tr><td>2</td><td>NORMAL</td></tr>\n        <tr><td>3</td><td>NOSIGNAL</td></tr>\n        <tr><td>4</td><td>UNSELECTED</td></tr>\n        <tr><td>5</td><td>ERR</td></tr>\n        <tr><td>6</td><td>UNKNOWN</td></tr>\n      </table>\n      When \"ascending\" is specified in \"Sort order”, display the items in order from smallest priority value <br>\n\n  *2) Priority of the Alert Level is as below.\n      <table border=\"1\">\n        <tr><th>Priority Order</th><th>Value</th></tr>\n        <tr><td>1</td><td>error</td></tr>\n        <tr><td>2</td><td>warning</td></tr>\n        <tr><td>3</td><td>normal</td></tr>\n      </table>\n      When \"ascending\" is specified in \"Sort order”, display the items in order from smallest priority value <br>\n\n  *3) Sort the Communication status in order of error code. <br>\n\n  *4) Priority of the Input Mode is as below.\n      <table border=\"1\">\n        <tr><th>Priority Order</th><th>Value</th></tr>\n        <tr><td>1</td><td>APPLICATION</td></tr>\n        <tr><td>2</td><td>APPLICATION1</td></tr>\n        <tr><td>3</td><td>APPLICATION2</td></tr>\n        <tr><td>4</td><td>APPLICATION3</td></tr>\n        <tr><td>5</td><td>APPLICATION4</td></tr>\n        <tr><td>6</td><td>APPLICATION5</td></tr>\n        <tr><td>7</td><td>APPLICATION6</td></tr>\n        <tr><td>8</td><td>COMPUTE</td></tr>\n        <tr><td>9</td><td>D-PORT1</td></tr>\n        <tr><td>10</td><td>D-PORT2</td></tr>\n        <tr><td>11</td><td>D-SUB2</td></tr>\n        <tr><td>12</td><td>D-SUB1</td></tr>\n        <tr><td>13</td><td>D-SUB3</td></tr>\n        <tr><td>14</td><td>DSUB2</td></tr>\n        <tr><td>15</td><td>DVD</td></tr>\n        <tr><td>16</td><td>DVI-D</td></tr>\n        <tr><td>17</td><td>HDMI-AV</td></tr>\n        <tr><td>18</td><td>HDMI1</td></tr>\n        <tr><td>19</td><td>HDMI2</td></tr>\n        <tr><td>20</td><td>HDMI3</td></tr>\n        <tr><td>21</td><td>HOME</td></tr>\n        <tr><td>22</td><td>OPTION</td></tr>\n        <tr><td>23</td><td>TUNER1</td></tr>\n        <tr><td>24</td><td>TV</td></tr>\n        <tr><td>25</td><td>USB</td></tr>\n        <tr><td>26</td><td>USB-C</td></tr>\n        <tr><td>27</td><td>UNSELECTED</td></tr>\n        <tr><td>28</td><td>ERR</td></tr>\n        <tr><td>29</td><td>UNKNOWN</td></tr>\n      </table>\n      When \"ascending\" is specified in \"Sort order”, display the items in order from smallest priority value <br>\n\n  *5) Sort the Temperature Sensor Status in order of status code. <br>\n\n  *6) Priority of the Hardware Status is as below.\n      <table border=\"1\">\n        <tr><th>Priority Order</th><th>Value</th></tr>\n        <tr><td>1</td><td>xxxx-xxxxxx-xx-xxxx or all other \"A1xx\"</td></tr>\n        <tr><td>2</td><td>ERR</td></tr>\n        <tr><td>3</td><td>UNSELECTED</td></tr>\n        <tr><td>4</td><td>UNKNOWN</td></tr>\n        <tr><td>5</td><td>A1EC (SNDS device only)</td></tr>\n        <tr><td>6</td><td>0000-xxxxxx-xx-xxxx or \"A100\"</td></tr>\n      </table>\n      When \"ascending\" is specified in \"Sort order”, display the items in order from smallest priority value <br>\n\n●Check content\n  - Error for other than specified value"
              order:
                enum:
                  - ascending
                  - descending
                type: string
                description: "Sort Order <br>\n  - ascending: Ascending\n  - descending: Descending\n\n●Check content\n  - Error for other than specified value"
          description: Sort Specification
    getDeviceDetailReq:
      required:
        - deviceId
      type: object
      properties:
        deviceId:
          type: string
          description: "The deviceId of target device.<br> ●Check content\n  - A null or empty string is an error."
    registerDeviceReq:
      required:
        - agentId
        - registerDeviceList
      type: object
      properties:
        agentId:
          type: string
          description: "agentId of target agent <br> ●Check content\n  - A null or empty string is an error."
        registerDeviceList:
          type: array
          items:
            required:
              - modelName
              - serialNumber
              - ipAddress
              - port
              - userName
              - password
              - friendlyName
              - familyName
              - type
            type: object
            properties:
              modelName:
                type: string
                description: "Model Name <br> ●Check content\n  - A null or empty string is an error.\n  - Error for other than below characters\n    + Printable ascii characters."
              serialNumber:
                type: string
                description: "Serial number <br> ●Check content\n  - A null or empty string is an error.\n  - Error for other than below characters\n    + Printable ascii characters."
              friendlyName:
                type: string
                description: Name <br> ●Check content - Empty string is allowed - Error for null - Printable characters including multi-byte characters can be specified
              ipAddress:
                type: string
                description: "IP Address <br> ●Check content\n  - A null or empty string is an error.\n  - Error for other than below characters\n    + Uppercase Alphabet (“A” to “Z”)\n    + Lowercase Alphabet (“a” to “z”)\n    + Number (“0” to “9”)\n    + Hyphen (\"-\")\n    + Dot Character (”.”)"
              port:
                type: integer
                description: "Port <br> ●Check content\n  - Error for other than numeric value"
              userName:
                type: string
                description: "User name <br> ●Check content\n  - Empty string is allowed\n  - Error for null\n  - Error for other than below characters\n    + Uppercase Alphabet (“A” to “Z”)\n    + Lowercase Alphabet (“a” to “z”)\n    + Number (“0” to “9”)\n    + Hyphen (\"-\")\n    + Underscore (”_”)"
              password:
                type: string
                description: "Password <br> ●Check content\n  - Empty string is allowed\n  - Error for null\n  - Error for other than below characters\n    + Uppercase Alphabet (“A” to “Z”)\n    + Lowercase Alphabet (“a” to “z”)\n    + Number (“0” to “9”)\n    + Hyphen (\"-\")\n    + Underscore (”_”)"
              familyName:
                type: string
                description: "family Name<br> ●Check content\n  - A null or empty string is an error.\n  - If the name does not begin with \"SHARP-\" or \"SNDS-\", an error is assumed."
              type:
                type: string
                description: "Connection protocol to Display Device.<br>\n  - ssh-snds: Command format is N-format with SSH use.\n  - ssh-sharp: Command format is S-format with SSH use.\n  - tcp-snds: Command format is N-format, no SSH use.\n  - tcp-sharp: Command format is S-format, no SSH use.\n\n●Check content\n  - Error for other than specified value"
          description: "List of device information to be registered.<br> ●Check content\n  - Error for null\n  - Empty list is allowed"
    deleteDeviceReq:
      required:
        - groupId
        - deviceIds
        - isExclude
      type: object
      properties:
        groupId:
          type: string
          description: "groupId of target group <br> ●Check content\n  - A null or empty string is an error."
        deviceIds:
          type: array
          items:
            type: string
            description: "The deviceId of target device.<br> ●Check content\n  - A null is an error."
          description: "The deviceId list of target device.<br> ●Check content\n  - Empty list is allowed.\n  - A null is an error."
        isExclude:
          type: boolean
          description: "Specify deviceIds details.\n  - true: deviceIds is unselected device.\n  - false: deviceIds is selected device.\n\n●Check content\n  - Error for other than true/false"
    executeUpdateInformationReq:
      required:
        - groupId
        - deviceIds
        - isExclude
      type: object
      properties:
        groupId:
          type: string
          description: The target groupId<br> The device registered in the group of the specified groupId is targeted.<br>
        deviceIds:
          type: array
          items:
            type: string
            description: "The deviceId of target device.<br> ●Check content\n  - A null is an error."
          description: "The deviceId list of target device.<br> ●Check content\n  - Empty list is allowed.\n  - A null is an error."
        isExclude:
          type: boolean
          description: "Specify deviceIds details.\n  - true: deviceIds is unselected device.\n  - false: deviceIds is selected device.\n\n●Check content\n  - Error for other than true/false"
    executeManagePowerReq:
      required:
        - groupId
        - command
        - deviceIds
        - isExclude
      type: object
      properties:
        groupId:
          type: string
          description: The target groupId<br> The device registered in the group of the specified groupId is targeted.<br>
        command:
          enum:
            - standby
            - powerOn
          type: string
          description: "Execution command.\n  - standby: Shift to standby state\n  - powerOn: Shift to power on state\n\n●Check content\n  - Any string other than the specified string is an error."
        deviceIds:
          type: array
          items:
            type: string
            description: "The deviceId of target device.<br> ●Check content\n  - A null is an error."
          description: "The deviceId list of target device.<br> ●Check content\n  - Empty list is allowed.\n  - A null is an error."
        isExclude:
          type: boolean
          description: "Specify deviceIds details.\n  - true: deviceIds is unselected device.\n  - false: deviceIds is selected device.\n\n●Check content\n  - Error for other than true/false"
    executeChangeInputModeReq:
      required:
        - groupId
        - command
        - deviceIds
        - isExclude
      type: object
      properties:
        groupId:
          type: string
          description: The target groupId<br> The device registered in the group of the specified groupId is targeted.<br>
        command:
          enum:
            - toggleChange
            - DVI-D
            - D-SUB1
            - D-SUB2
            - D-SUB3
            - HDMI-AV
            - HDMI1
            - USB
            - HDMI2
            - D-PORT1
            - HDMI3
            - OPTION
            - D-PORT2
            - APPLICATION
            - TV
          type: string
          description: "Execution command.\n  - Execution command list.\n    <table border=\"1\">\n      <tr><th>Command</th><th>Description</th></tr>\n      <tr><td>toggleChange</td><td>Input switching by toggle.</td></tr>\n      <tr><td>DVI-D</td><td>DVI-D</td></tr>\n      <tr><td>D-SUB1</td><td>D-SUB[RGB]</td></tr>\n      <tr><td>D-SUB2</td><td>D-SUB[COMPONENT]</td></tr>\n      <tr><td>D-SUB3</td><td>D-SUB[VIDEO]</td></tr>\n      <tr><td>HDMI-AV</td><td>HDMI[AV]</td></tr>\n      <tr><td>HDMI1</td><td>HDMI1 (or HDMI[PC])</td></tr>\n      <tr><td>USB</td><td>USB (or Media Player)</td></tr>\n      <tr><td>HDMI2</td><td>HDMI2</td></tr>\n      <tr><td>D-PORT1</td><td>DisplayPort1</td></tr>\n      <tr><td>HDMI3</td><td>HDMI3</td></tr>\n      <tr><td>OPTION</td><td>OPTION</td></tr>\n      <tr><td>D-PORT2</td><td>DisplayPort2</td></tr>\n      <tr><td>APPLICATION</td><td>APPLICATION</td></tr>\n      <tr><td>TV</td><td>TV</td></tr>\n    </table>\n\n●Check content\n  - Any string other than the specified string is an error."
        deviceIds:
          type: array
          items:
            type: string
            description: "The deviceId of target device.<br> ●Check content\n  - A null is an error."
          description: "The deviceId list of target device.<br> ●Check content\n  - Empty list is allowed.\n  - A null is an error."
        isExclude:
          type: boolean
          description: "Specify deviceIds details.\n  - true: deviceIds is unselected device.\n  - false: deviceIds is selected device.\n\n●Check content\n  - Error for other than true/false"
    applyDeviceScheduleReq:
      required:
        - groupId
        - scheduleId
        - deviceIds
        - isExclude
      type: object
      properties:
        groupId:
          type: string
          description: The target groupId<br> The device registered in the group of the specified groupId is targeted.<br>
        scheduleId:
          type: string
          description: "Schedule ID of the schedule to be applied.<br> If \"scheduleId\" is an empty string, the applied schedule will be deleted.<br> ●Check content\n  - A null is an error."
        deviceIds:
          type: array
          items:
            type: string
            description: "The deviceId of target device.<br> ●Check content\n  - A null is an error."
          description: "The deviceId list of target device.<br> ●Check content\n  - Empty list is allowed.\n  - A null is an error."
        isExclude:
          type: boolean
          description: "Specify deviceIds details.\n  - true: deviceIds is unselected device.\n  - false: deviceIds is selected device.\n\n●Check content\n  - Error for other than true/false"
    getDeviceScheduleReq:
      required:
        - deviceId
      type: object
      properties:
        deviceId:
          type: string
          description: "The deviceId of target device.<br> ●Check content\n  - A null or empty string is an error."
    updateDeviceInfoReq:
      required:
        - deviceId
        - friendlyName
      type: object
      properties:
        deviceId:
          type: string
          description: "The deviceId of target device.<br> ●Check content\n  - A null or empty string is an error."
        friendlyName:
          type: string
          description: "Name<br>\n  ●Check content\n    - Null character (i.e. empty string) is allowed\n    - Error for null\n    - Printable characters including multi-byte characters can be specified"
    getSearchTargetListReq:
      required:
        - agentId
      type: object
      properties:
        startIndex:
          type: integer
          description: "Start Index <br> ●Check content\n  - Error for other than numeric value"
          default: 0
        count:
          type: integer
          description: "Number of records <br> ●Check content\n  - Error for other than numeric value"
          default: 10
        agentId:
          type: string
          description: "agentId of target agent <br> ●Check content\n  - A null or empty string is an error."
        simpleFilters:
          type: array
          items:
            required:
              - key
              - value
            type: object
            properties:
              key:
                type: string
                description: "Filter key<br> Specifiable items are as below.\n- Filter key list\n  <table border=\"1\">\n    <tr><th>Key</th><th>Description</th></tr>\n    <tr><td>ipAddress</td><td>IP Address</td></tr>\n    <tr><td>port</td><td>Port Number</td></tr>\n    <tr><td>userName</td><td>User Name</td></tr>\n    <tr><td>friendlyName</td><td>Custom Name</td></tr>\n  </table>\n\n●Check content\n  - Error for other than specified value"
              value:
                type: string
                description: "Filtering target strings <br> Strings that are Specifiable in filter key are as below.\n- Filtering target strings\n  <table border=\"1\">\n    <tr><th>Key</th><th>Description</th></tr>\n    <tr><td>ipAddress</td><td>Specify input value</td></tr>\n    <tr><td>port</td><td>Specify input value(*1)</td></tr>\n    <tr><td>userName</td><td>Specify input value</td></tr>\n    <tr><td>friendlyName</td><td>Specify input value</td></tr>\n  </table>\n\n  *1)Extracts only exact match data."
          description: Simple Filter
        orderBy:
          type: array
          items:
            required:
              - key
              - order
            type: object
            properties:
              key:
                type: string
                description: "Sort Key <br> Specifiable items are as below.\n- Sort Key list\n  <table border=\"1\">\n    <tr><th>Key</th><th>Description</th></tr>\n    <tr><td>ipAddress</td><td>IP Address <br>Sort IP address by digitized value (i.e. converted to numerical form)</td></tr>\n    <tr><td>port</td><td>Port Number</td></tr>\n    <tr><td>userName</td><td>User Name</td></tr>\n    <tr><td>friendlyName</td><td>Custom Name</td></tr>\n  </table>\n\n●Check content\n  - Error for other than specified value"
              order:
                enum:
                  - ascending
                  - descending
                type: string
                description: "Sort Order <br>\n  - ascending: Ascending\n  - descending: Descending\n\n●Check content\n  - Error for other than specified value"
          description: Sort Specification
    addSearchTargetReq:
      required:
        - agentId
        - searchTargetList
      type: object
      properties:
        agentId:
          type: string
          description: "agentId of add destination <br> ●Check content\n  - A null or empty string is an error."
        searchTargetList:
          type: array
          items:
            required:
              - targetAddress
              - port
              - userName
              - password
              - friendlyName
            type: object
            properties:
              targetAddress:
                type: string
                description: "Target Address (IP Address) <br> ●Check content\n  - Error for null, null character (i.e. empty string)\n  - Error for other than below characters\n    + Uppercase Alphabet (“A” to “Z”)\n    + Lowercase Alphabet (“a” to “z”)\n    + Number (“0” to “9”)\n    + Hyphen (\"-\")\n    + Dot Character (”.”)"
              port:
                type: integer
                description: "Port <br> ●Check content\n  - Error for other than numeric value"
              userName:
                type: string
                description: "User name <br> ●Check content\n  - Null character (i.e. empty string) is allowed\n  - Error for null\n  - Error for other than below characters\n    + Uppercase Alphabet (“A” to “Z”)\n    + Lowercase Alphabet (“a” to “z”)\n    + Number (“0” to “9”)\n    + Hyphen (\"-\")\n    + Underscore (”_”)"
              password:
                type: string
                description: "Password <br> ●Check content\n  - Null character (i.e. empty string) is allowed\n  - Error for null\n  - Error for other than below characters\n    + Uppercase Alphabet (“A” to “Z”)\n    + Lowercase Alphabet (“a” to “z”)\n    + Number (“0” to “9”)\n    + Hyphen (\"-\")\n    + Underscore (”_”)"
              friendlyName:
                type: string
                description: Name <br> ●Check content - Null character (i.e. empty string) is allowed - Error for null - Printable characters including multi-byte characters can be specified
          description: "Information of target to be added <br> ●Check content\n  - Error for null\n  - Empty list is allowed"
    getSearchTargetReq:
      required:
        - agentId
        - targetId
      type: object
      properties:
        agentId:
          type: string
          description: "agentId of add destination <br> ●Check content\n  - A null or empty string is an error."
        targetId:
          type: string
          description: "Target ID<br> ●Check content\n  - A null or empty string is an error."
    updateSearchTargetReq:
      required:
        - agentId
        - targetId
        - targetAddress
        - port
        - userName
        - changePassword
        - friendlyName
      type: object
      properties:
        agentId:
          type: string
          description: "agentId of add destination <br> ●Check content\n  - A null or empty string is an error."
        targetId:
          type: string
          description: "Target ID<br> ●Check content\n  - A null or empty string is an error."
        targetAddress:
          type: string
          description: "Target Address (IP Address) <br> ●Check content\n  - Error for null, null character (i.e. empty string)\n  - Error for other than below characters\n    + Uppercase Alphabet (“A” to “Z”)\n    + Lowercase Alphabet (“a” to “z”)\n    + Number (“0” to “9”)\n    + Hyphen (\"-\")\n    + Dot Character (”.”)"
        port:
          type: integer
          description: "Port <br> ●Check content\n  - Error for other than numeric value"
        userName:
          type: string
          description: "User name <br> ●Check content\n  - Null character (i.e. empty string) is allowed\n  - Error for null\n  - Error for other than below characters\n    + Uppercase Alphabet (“A” to “Z”)\n    + Lowercase Alphabet (“a” to “z”)\n    + Number (“0” to “9”)\n    + Hyphen (\"-\")\n    + Underscore (”_”)"
        changePassword:
          type: boolean
          description: "Specify the presence/absence of Password change\n  - true: Password Change present\n  - false: No Password change\n\n●Check content\n  - Error for other than true/false"
        password:
          type: string
          description: "Password <br> When changePassword is *false*, do not check the content of this parameter and do not refer also. <br> When changePassword is  “true”, perform the check i.e. mentioned in “●Check content”. <br> ●Check content\n  - Null character (i.e. empty string) is allowed\n  - Error for null\n  - Error for other than below characters\n    + Uppercase Alphabet (“A” to “Z”)\n    + Lowercase Alphabet (“a” to “z”)\n    + Number (“0” to “9”)\n    + Hyphen (\"-\")\n    + Underscore (”_”)"
        friendlyName:
          type: string
          description: "Name <br> ●Check content\n  - Null character (i.e. empty string) is allowed\n  - Error for null\n  - Printable characters including multi-byte characters can be specified"
    deleteSearchTargetReq:
      required:
        - agentId
        - targetIds
        - isExclude
      type: object
      properties:
        agentId:
          type: string
          description: "agentId of add destination <br> ●Check content\n  - A null or empty string is an error."
        targetIds:
          type: array
          items:
            type: string
            description: "Target ID<br> ●Check content\n  - A null is an error."
          description: "The ID list of target ID.<br> ●Check content\n  - Empty list is allowed.\n  - A null is an error."
        isExclude:
          type: boolean
          description: "Specify targetIds details.\n  - true: targetIds is unselected target.\n  - false: targetIds is selected target.\n\n●Check content\n  - Error for other than true/false"
    executeDeviceSearchReq:
      required:
        - agentId
        - requestOwnerId
      type: object
      properties:
        agentId:
          type: string
          description: "agentId of target agent <br> ●Check content\n  - A null or empty string is an error."
        requestOwnerId:
          type: string
          description: "Request Owner ID. The value to be specified for userId when sending SignalR messages.<br> ●Check content\n  - A null or empty string is an error."
    getSSHKeyStatusReq:
      required:
        - agentId
      type: object
      properties:
        agentId:
          type: string
          description: "agentId of target AgentIDP<br> ●Check content\n  - A null or empty string is an error."
    downloadSSHKeyReq:
      required:
        - agentId
      type: object
      properties:
        agentId:
          type: string
          description: "agentId of target AgentIDP<br> ●Check content\n  - A null or empty string is an error."
    getFoundDeviceListReq:
      required:
        - agentId
      type: object
      properties:
        agentId:
          type: string
          description: "agentId of target AgentIDP<br> ●Check content\n  - A null or empty string is an error."
    getScheduleListReq:
      required:
        - groupId
      type: object
      properties:
        groupId:
          type: string
          description: "groupId of target group <br> ●Check content\n  - A null or empty string is an error."
    setScheduleListReq:
      required:
        - groupId
        - scheduleList
      type: object
      properties:
        groupId:
          type: string
          description: "groupId of target group <br> ●Check content\n  - A null or empty string is an error."
        scheduleList:
          type: array
          items:
            required:
              - scheduleName
              - select
              - interval
              - isEnabled
            type: object
            properties:
              scheduleName:
                type: string
                description: "scheduleName\n  - Schedule names\n    <table border=\"1\">\n      <tr><th>Parameter</th><th>Description</th></tr>\n      <tr><td>deviceInfo</td><td>Device Information Update</td>\n    </table>\n\n●Check content\n  - Error for other than specified value"
              select:
                enum:
                  - 1
                  - 2
                  - 3
                type: integer
                description: "select: * `1` - MINUTE * `2` - HOURS * `3` - DAY\n●Check content\n  - Error for other than specified value\n"
              interval:
                type: number
                description: "interval<br> ●Check content\n  - Error for other than numeric value"
              isEnabled:
                type: boolean
                description: "Enable/Disable schedule<br>\n  <table border=\"1\">\n    <tr><th>value</th><th>Description</th></tr>\n    <tr><td>true</td><td>Schedule is enabled.</td>\n    <tr><td>false</td><td>Schedule is disabled.</td>\n  </table>\n\n●Check content\n  - Error for other than true/false"
    getDeviceListRsp:
      type: object
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        startIndex:
          type: integer
          description: Start Index (Same as request parameter)
        count:
          type: integer
          description: Number of requests (Same as request parameter)
        resultCount:
          type: integer
          description: Number of items acquired this time
        totalCount:
          type: integer
          description: Total number of search result
        deviceList:
          type: array
          items:
            type: object
            properties:
              deviceId:
                type: string
                description: deviceId
              modelName:
                type: string
                description: 'Model Name<br> After registration, if the Get Info is not executed, null character'
              serialNumber:
                type: string
                description: 'Serial Number <br> After registration, if the Get Info is not executed, null character'
              friendlyName:
                type: string
                description: Name
              ipAddress:
                type: string
                description: IP Address
              macAddress:
                type: string
                description: 'MAC Address<br>If the target field does not exist, return an empty string.'
              firmwareVersion:
                type: string
                description: 'Firmware version<br>If the target field does not exist, return an empty string.'
              agentName:
                type: string
                description: Related Agent Name
              tagIds:
                type: array
                items:
                  type: string
                  description: tagId
                description: List of associated tagIds
              communicationStatus:
                type: string
                description: "Communication Status <br> <table border=\"1\">\n  <tr><th>Code</th><th>Description</th></tr>\n  <tr><td>0000</td><td>Normal (Can communicate with device and received normal response) </td></tr>\n  <tr><td>0301</td><td>No Response</td></tr>\n  <tr><td>0302</td><td>Abnormal (Able to communicate with device and received abnormal response)</td></tr>\n  <tr><td>0303</td><td>Replace device (IP Address is being used by other display device)</td></tr>\n  <tr><td>0305</td><td> Authentication Error (Failed to login to device) </td></tr>\n  <tr><td>0306</td><td> Abnormal (Able to communicate with device but failed to get ID info): Receive ERR/UNSELECTED) </td></tr>\n  <tr><td>0307</td><td> Abnormal (Able to communicate with device but failed to get ID info): Receive only empty string/null character (CR+LF) </td></tr>\n  <tr><td>0310</td><td> Communication error  (Protocol Error or disconnection during communication etc.) </td></tr>\n  <tr><td>0399</td><td> Other Error </td></tr>\n  <tr><td>9999</td><td>Communication not executed (immediately after device registration till the first Get information result is received)</td></tr>\n</table>"
              powerStatus:
                enum:
                  - STANDBY
                  - NORMAL
                  - NOSIGNAL
                type: string
                description: 'Monitor Power Status<br> After registration, if the Get Info is not executed, null character'
              errorLevel:
                enum:
                  - error
                  - warning
                  - normal
                type: string
                description: "Error Level (alert Level)\n  * `normal` - hardwareStatus is ALL \"0\" or \"AAAA\" is all \"0\" and \"BBCCDD-EE-FGGG\" is anyone not \"0\" or \"A100\"\n  * `warning` - hardwareStatus is \"ERR\", \"UNSELECTED\", or \"Unknown value\" or \"A1EC\"\n  * `error`  - \"AAAA\" of hardwareStatus is anyone not \"0\" or all other \"A1xx\""
              hardwareStatus:
                type: string
                description: 'Hardware Monitoring Result <br> After registration, if it is not executed, null character'
              inputMode:
                enum:
                  - DVI-D
                  - D-SUB1
                  - D-SUB2
                  - D-SUB3
                  - HDMI-AV
                  - HDMI1
                  - USB
                  - HDMI2
                  - D-PORT1
                  - HDMI3
                  - OPTION
                  - D-PORT2
                  - APPLICATION
                  - TV
                  - USB-C
                  - DSUB2
                  - DVD
                  - TUNER1
                  - HOME
                  - COMPUTE
                  - APPLICATION1
                  - APPLICATION2
                  - APPLICATION3
                  - APPLICATION4
                  - APPLICATION5
                  - APPLICATION6
                type: string
                description: 'Input Mode <br> After registration, if the Get Info is not executed, null character'
              usageTime:
                type: integer
                description: 'Usage time (LCD lighting time (h)) <br> After registration, if it is not executed, -1'
              temperatureSensorStatus:
                type: integer
                description: 'Temperature Sensor status <br> After registration, if the Get Info is not executed, -1'
              createTimestamp:
                type: integer
                description: Registration Date and Time <br> Return registration date and time by timestamp.
                format: int64
              updateTimestamp:
                type: integer
                description: Update Date and Time <br> Return Update date and time by timestamp.
                format: int64
              scheduleId:
                type: string
                description: scheduleId of Device Schedule.<br> Returns an empty string if the DB field does not exist.
              scheduleName:
                type: string
                description: Schedule Name of Device Schedule.<br> Returns an empty string if the DB field does not exist.
          description: Device list
      description: getDeviceList response parameter.
    getDeviceDetailRsp:
      type: object
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        deviceId:
          type: string
          description: deviceId
        modelName:
          type: string
          description: 'Model Name<br> After registration, if the Get Info is not executed, null character'
        serialNumber:
          type: string
          description: 'Serial Number <br> After registration, if the Get Info is not executed, null character'
        friendlyName:
          type: string
          description: Name
        tagNames:
          type: array
          items:
            type: string
            description: tagName
          description: List of associated Tag names
        agentName:
          type: string
          description: Related Agent Name
        scheduleName:
          type: string
          description: Schedule Name of Device Schedule.<br> Returns an empty string if the DB field does not exist.
        firmwareVersion:
          type: string
          description: 'Firmware version<br>If the target field does not exist, return an empty string.'
        powerStatus:
          enum:
            - STANDBY
            - NORMAL
            - NOSIGNAL
          type: string
          description: 'Monitor Power Status<br> After registration, if the Get Info is not executed, null character'
        createTimestamp:
          type: integer
          description: Registration Date and Time <br> Return registration date and time by timestamp.
          format: int64
        updateTimestamp:
          type: integer
          description: Update Date and Time <br> Return Update date and time by timestamp.
          format: int64
        inputMode:
          enum:
            - DVI-D
            - D-SUB1
            - D-SUB2
            - D-SUB3
            - HDMI-AV
            - HDMI1
            - USB
            - HDMI2
            - D-PORT1
            - HDMI3
            - OPTION
            - D-PORT2
            - APPLICATION
            - TV
            - USB-C
            - DSUB2
            - DVD
            - TUNER1
            - HOME
            - COMPUTE
            - APPLICATION1
            - APPLICATION2
            - APPLICATION3
            - APPLICATION4
            - APPLICATION5
            - APPLICATION6
          type: string
          description: 'Input Mode <br> After registration, if the Get Info is not executed, null character'
        displaySize:
          enum:
            - WIDE
            - NORMAL
            - DOT
            - ZOOM
            - ZOOM2
            - AUTO
            - DAR4-3
            - DAR14-9
            - FULL
          type: string
          description: 'Screen Size <br> After registration, if the Get Info is not executed, null character'
        colorMode:
          enum:
            - STD
            - VIVID
            - SRGB
            - HIGH-ILLUM
            - PC
            - MOVIE
            - THRU
            - CUSTOM
            - AV
            - USER
            - HDR-VIDEO
            - CONFERENCING
            - SIGNAGE
            - THRU-NATIVE
            - RETAIL
            - TRANSPORTATION
            - HIGH-BRIGHT
            - SVE1
            - SVE2
            - SVE3
            - SVE4
            - SVE5
          type: string
          description: 'Color Mode <br> After registration, if the Get Info is not executed, null character'
        brightness:
          type: integer
          description: 'Brightness <br> After registration, if the Get Info is not executed, -1'
        volume:
          type: integer
          description: Volume
        mute:
          enum:
            - ON
            - OFF
          type: string
          description: 'Mute Status<br> After registration, if the Get Info is not executed, null character'
        direction:
          enum:
            - LANDSCAPE
            - PORTRAIT
            - FACEUP
            - FACEDOWN
            - AUTO
            - 180DEG
          type: string
          description: 'Screen Orientation <br> After registration, if the Get Info is not executed, null character'
        temperatureSensorStatus:
          type: integer
          description: 'Temperature Sensor status <br> After registration, if the Get Info is not executed, -1'
        temperature:
          type: array
          items:
            type: integer
          description: 'Temperature Sensor value <br> Return value of all sensors. <br> After registration, if the Get Info is not executed, -1'
        usageTime:
          type: integer
          description: 'Usage time (LCD lighting time (h)) <br> After registration, if it is not executed, -1'
        hardwareStatus:
          type: string
          description: 'Hardware Monitoring Result <br> After registration, if it is not executed, null character'
        ipAddress:
          type: string
          description: IP Address
        macAddress:
          type: string
          description: 'MAC Address<br>If the target field does not exist, return an empty string'
        communicationStatus:
          type: string
          description: "Communication Status <br> <table border=\"1\">\n  <tr><th>Code</th><th>Description</th></tr>\n  <tr><td>0000</td><td>Normal (Can communicate with device and received normal response </td></tr>\n  <tr><td>0301</td><td>No Response</td></tr>\n  <tr><td>0302</td><td>Abnormal (Can communicate with device and received anormal response </td></tr>\n  <tr><td>0303</td><td>Replace device (IP Address is being used by other display device)</td></tr>\n  <tr><td>0305</td><td> Authentication Error (Failed to login to device) </td></tr>\n  <tr><td>0306</td><td> Abnormal (Able to communicate with device but failed to get ID info): Receive ERR/UNSELECTED) </td></tr>\n  <tr><td>0307</td><td> Abnormal (Able to communicate with device but failed to get ID info): Receive only empty string/null character (CR+LF) </td></tr>\n  <tr><td>0310</td><td> Communication error  (Protocol Error or disconnection during communication etc.) </td></tr>\n  <tr><td>0399</td><td> Other Error </td></tr>\n  <tr><td>9999</td><td>Communication not executed (immediately after device registration till the first Get information result is received)</td></tr>\n</table>"
        errorLevel:
          enum:
            - error
            - warning
            - normal
          type: string
          description: "Error Level (alert Level)\n  * `normal` - hardwareStatus is ALL \"0\" or \"AAAA\" is all \"0\" and \"BBCCDD-EE-FGGG\" is anyone not \"0\" or \"A100\"\n  * `warning` - hardwareStatus is \"ERR\", \"UNSELECTED\", or \"Unknown value\" or \"A1EC\"\n  * `error`  - \"AAAA\" of hardwareStatus is anyone not \"0\" or all other \"A1xx\""
      description: getDeviceDetail response parameter.
    registerDeviceRsp:
      type: object
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
      description: registerDevice response parameter.
    deleteDeviceRsp:
      type: object
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
    executeUpdateInformationRsp:
      type: object
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
      description: execvuteUpdateInformation response parameter.
    executeManagePowerRsp:
      type: object
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        discardDeviceIds:
          type: array
          items:
            type: string
            description: Target deviceId
          description: Cancelled tasks deviceId list
      description: executeManagePower response parameter.
    executeChangeInputModeRsp:
      type: object
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        discardDeviceIds:
          type: array
          items:
            type: string
            description: Target deviceId
          description: Cancelled tasks deviceId list
      description: executeChangeInputMode response parameter.
    applyDeviceScheduleRsp:
      type: object
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
      description: applyDeviceSchedule response parameter.
    getDeviceScheduleRsp:
      type: object
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        schedule:
          type: object
          properties:
            scheduleId:
              type: string
              description: "scheduleId.\n"
            scheduleName:
              type: string
              description: Schedule Name.
            operationList:
              type: array
              items:
                type: object
                properties:
                  operationType:
                    enum:
                      - powersave
                      - wakeup
                    type: string
                    description: "Operation Type <br> <table border=\"1\">\n  <tr><th>value</th><th>Description</th></tr>\n  <tr><td>powersave</td><td>Standby</td></tr>\n  <tr><td>wakeup</td><td>Power On</td></tr>\n</table>"
                  inputChangeFlag:
                    type: boolean
                  inputChange:
                    type: string
                  timeZone:
                    type: string
                    description: timeZone(To be removed from UI)
                  executeStartDate:
                    type: integer
                    description: Execute Start Date.<br> This value is set as a UTC+0:00 value in timestamp format.
                    format: int64
                  recurrence:
                    enum:
                      - 1
                      - 2
                    type: integer
                    description: "recurrence<br> <table border=\"1\">\n  <tr><th>value</th><th>Description</th></tr>\n  <tr><td>1</td><td>Day</td></tr>\n  <tr><td>2</td><td>Week</td></tr>\n</table>"
                  dayOfWeek:
                    type: array
                    items:
                      type: integer
                    description: 'If recurrence is Week, Any value from [1-7].<br>1:Monday,2:Tuesday so on'
                  timeList:
                    type: array
                    items:
                      type: object
                      properties:
                        time:
                          type: object
                          properties:
                            hour:
                              type: integer
                              description: hour(0 to 23 hrs)
                            minute:
                              type: integer
                              description: minute(0 to 59 minutes)
              description: 'operation list<br> If no device schedule has been set, specify an empty list.'
          description: device schedule.
      description: getDeviceSchedule response parameter.
    updateDeviceInfoRsp:
      type: object
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
      description: updateDeviceInfo response parameter.
    getSearchTargetListRsp:
      type: object
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        startIndex:
          type: integer
          description: Start Index (Same as request parameter)
        count:
          type: integer
          description: Number of requests (Same as request parameter)
        resultCount:
          type: integer
          description: Number of items acquired this time
        totalCount:
          type: integer
          description: Total number of search result
        targetList:
          type: array
          items:
            type: object
            properties:
              targetId:
                type: string
                description: targetId
              targetAddress:
                type: string
                description: Target Address
              port:
                type: integer
                description: Port
              userName:
                type: string
                description: User name
              friendlyName:
                type: string
                description: Name
          description: Search Target list
      description: getSearchTargetList response parameter.
    addSearchTargetRsp:
      type: object
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
      description: addSearchTarget response parameter.
    getSearchTargetRsp:
      type: object
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        targetId:
          type: string
          description: targetId
        targetAddress:
          type: string
          description: Target Address
        port:
          type: integer
          description: Port
        userName:
          type: string
          description: User name
        friendlyName:
          type: string
          description: Name
      description: getSearchTarget response parameter.
    updateSearchTargetRsp:
      type: object
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
      description: updateSearchTarget response parameter.
    deleteSearchTargetRsp:
      type: object
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
    executeDeviceSearchRsp:
      type: object
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        timeout:
          type: integer
          description: timeout in second.
        targetCount:
          type: integer
          description: 'Number of device search requests<br> When the number of search completion notifications equal to the number of device search requests is received,  the search is considered to be completed.'
      description: executeDeviceSearch response parameter.
    getSSHKeyStatusRsp:
      type: object
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        status:
          type: string
          description: "SSH Key generate status.<br>\n  <table border=\"1\">\n    <tr><th>Status</th><th>Description</th></tr>\n    <tr><td>notGenerate</td><td>Not generated SSH key.</td></tr>\n    <tr><td>generated</td><td>SSH key generated.</td></tr>\n    <tr><td>deleted</td><td>SSH key deleted.</td></tr>\n    <tr><td>notSupport</td><td>Generate SSH key not support.(AgentIDP App version is earlier than Ver.16561.)</td></tr>\n  </table>"
    downloadSSHKeyRsp:
      type: object
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        url:
          type: string
          description: SSH Key download url.
    getFoundDeviceListRsp:
      type: object
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        deviceList:
          type: array
          items:
            type: object
            properties:
              modelName:
                type: string
                description: Model Name
              serialNumber:
                type: string
                description: Serial Number
              friendlyName:
                type: string
                description: Name
              ipAddress:
                type: string
                description: IP Address
              port:
                type: integer
                description: Port number
              userName:
                type: string
                description: User Name
              password:
                type: string
                description: Password
              familyName:
                type: string
                description: Family Name
              type:
                type: string
                description: "Connection protocol to Display Device.<br>\n  - ssh-snds: Command format is N-format with SSH use.\n  - ssh-sharp: Command format is S-format with SSH use.\n  - tcp-snds: Command format is N-format, no SSH use.\n  - tcp-sharp: Command format is S-format, no SSH use."
          description: Found device list.
    getScheduleListRsp:
      type: object
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        scheduleList:
          type: array
          items:
            type: object
            properties:
              scheduleName:
                type: string
                description: "scheduleName\n  - Schedule names\n    <table border=\"1\">\n      <tr><th>Parameter</th><th>Description</th></tr>\n      <tr><td>deviceInfo</td><td>Device Information Update</td>\n    </table>"
              select:
                enum:
                  - 1
                  - 2
                  - 3
                type: integer
                description: "select: * `1` - MINUTE * `2` - HOURS * `3` - DAY\n"
              interval:
                type: number
                description: interval in seconds
              isEnabled:
                type: boolean
                description: "Enable/Disable schedule<br>\n  <table border=\"1\">\n    <tr><th>value</th><th>Description</th></tr>\n    <tr><td>true</td><td>Schedule is enabled.</td>\n    <tr><td>false</td><td>Schedule is disabled.</td>\n  </table>"
      description: getScheduleList response parameter.
    setScheduleListRsp:
      type: object
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
      description: setScheduleList response parameter.
    commonRsp:
      type: object
      properties:
        errorList:
          type: array
          items:
            type: object
            properties:
              errorCode:
                type: string
                description: "Error Code\n  - Error Code list\n    <table border=\"1\">\n      <tr><th>Error code</th><th>Description</th></tr>\n      <tr><td>E0001</td><td>DB Access Error</td></tr>\n      <tr><td>E0004</td><td>JSON Parse error</td></tr>\n      <tr><td>E0011</td><td>Parameter mandatory check error</td></tr>\n      <tr><td>E0014</td><td>Parameter format check error</td></tr>\n      <tr><td>E0019</td><td>When target instance (group or device etc.) does not exist</td></tr>\n      <tr><td>E0021</td><td>Invalid token</td></tr>\n      <tr><td>E0024</td><td>No permission Error</td></tr>\n      <tr><td>E0026</td><td>Session timeout error</td></tr>\n      <tr><td>E0050</td><td>Error other than specified group management</td></tr>\n    </table>"
              errorField:
                type: string
                description: Parameter field where error occurred
              errorValue:
                type: string
                description: Value that result into an error
              errorMessage:
                type: string
                description: Error message (Text that human can understand)
  securitySchemes:
    apiKeyHeader:
      type: apiKey
      name: Ocp-Apim-Subscription-Key
      in: header
    apiKeyQuery:
      type: apiKey
      name: subscription-key
      in: query
security:
  - apiKeyHeader: [ ]
  - apiKeyQuery: [ ]
tags:
  - name: Display Device Management
    description: API of Display device Management.
  - name: Display Device Agent Management
    description: API of Display Device Agent Management.
  - name: Display Device Schedule Management
    description: API of Display Device Schedule Management.